{"version":3,"file":"component---src-pages-index-tsx-09de327bff17edc1eee9.js","mappings":"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","sources":["webpack://thedarkroomm/./src/components/hero/hero.tsx","webpack://thedarkroomm/./src/components/featured-creator/featured-creator.tsx","webpack://thedarkroomm/./src/pages/index.tsx","webpack://thedarkroomm/./src/components/newsletter/Newsletter.tsx","webpack://thedarkroomm/./src/utils/span-text.tsx","webpack://thedarkroomm/./src/components/column.tsx"],"sourcesContent":["import React from \"react\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nimport SpanText from \"../../utils/span-text\";\n\n/*\n * Types\n */\ninterface HeroProps {\n  title: string;\n  image: any\n}\n\n/*\n * Style\n */\n\nconst Hero: React.FC<HeroProps> = ({title, image}) => {\n  console.log(image);\n  \n  return (\n    <div className={`hero container relative flex items-center justify-center flex-col text-center`}>\n      <h1 className=\"mt-8 mb-8\">\n        <SpanText \n          text={title}\n          delay={.04}\n        />\n      </h1>\n\n      <GatsbyImage\n        className=\"object-cover rounded-2xl w-full max-h-[700px]\"\n        loading=\"eager\" \n        image={image}\n        alt={'Hero image'}\n      />\n      {/* <img className=\"object-cover rounded-t-2xl w-full max-h-[700px]\" height={2000} width={3000} src={ConconDune} alt=\"Lanscape preset\" loading=\"eager\"/> */}\n    </div>\n  );\n}\n\nexport default Hero\n","import React from \"react\"\nimport Columns from \"../columns\";\nimport Button from \"../../design-system/button/button\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\nconst FeaturedCreator: React.FC = ({ }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(\n        filter: { fileAbsolutePath: { regex: \"/creators/\" }, frontmatter: { published: { eq: true }, name: { eq: \"JP Belley\" } } }\n        sort: { frontmatter: { date: DESC } }\n        limit: 2\n      ) {\n        edges {\n          node {\n            frontmatter {\n              published\n              productLink\n              featuredImage {\n                childImageSharp {\n                  gatsbyImageData(width: 600)\n                }\n              }\n            }\n            id\n          }\n        }\n      }\n      strapiCreator(Slug: {eq: \"jp-belley\"}) {\n        FirstName\n        LastName\n        Slug\n        Avatar {\n          localFile {\n            childImageSharp {\n              gatsbyImageData(width: 150, layout: FIXED)\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const { featuredImage, productLink } = data.allMarkdownRemark.edges[0].node.frontmatter;\n  const { FirstName, LastName, Avatar, Slug } = data.strapiCreator;\n  const featuredImageData = getImage(featuredImage.childImageSharp)\n  const creatorImg = getImage(Avatar.localFile.childImageSharp.gatsbyImageData);\n\n  return (\n    <>\n      {/* Featured Creator */ }\n      <section className = \"container-black px-5 pt-12 lg:pt-28\">\n        <h2 className=\"text-center mt-0 mb-12\">Featured creator</h2>\n        <Columns columns=\"2\" gap=\"16\">\n          <div className=\"lg:text-left flex flex-col justify-center gap-4\">\n            <a \n              href={`/creator/${Slug}`} \n              className=\"mx-auto lg:mx-0 w-max outline-4 hover:outline duration-300 rounded-full overflow-hidden box-border\"\n              onClick={() => sa_event(\"click_creator_profile\")}\n            >\n              <GatsbyImage\n                className=\"hover:scale-110 duration-300\"\n                image={creatorImg} \n                alt={`${FirstName} ${LastName}`} \n              />\n            </a>\n            <div>\n              <h2 className=\"mt-0 mb-4\">Crafted by {FirstName} {LastName}. Built for Storytelling</h2>\n              <Button\n                text=\"See presets\"\n                color=\"dark\"\n                link={productLink}\n                onClick={() => sa_event(\"click_creator_product\")}\n              />\n            </div>\n          </div>\n          <div>\n            <a\n              href={productLink}\n              onClick={() => {\n                sa_event(\"click_creator_product\");\n              }}\n            >\n              <GatsbyImage\n                className={`rounded overflow-hidden`}\n                image={featuredImageData}\n                alt={''}\n              />\n            </a>\n          </div>\n        </Columns>\n      </section>\n    </>\n  );\n}\n\nexport default FeaturedCreator;\n","import * as React from \"react\"\nimport type { PageProps } from \"gatsby\"\nimport { graphql } from \"gatsby\"\nimport { getImage } from \"gatsby-plugin-image\"\n// import useInView from \"../utils/use-in-view\";\n\nimport Layout from \"../components/layout/layout\";\nimport Hero from \"../components/hero/hero\";\nimport Columns from \"../components/columns\";\nimport Column from \"../components/column\";\nimport MonthlyCTA from \"../components/monthly-cta/monthly-cta\";\n\n// Import Swiper styles\nimport 'swiper/css';\nimport Newsletter from \"../components/newsletter/Newsletter\";\nimport FeaturedCreator from \"../components/featured-creator/featured-creator\";\n\nconst IndexPage: React.FC<PageProps> = ({ data }) => {\n  const { allStrapiHomepage, allStrapiProduct: {nodes} } = data;\n  const heroImgData = getImage(allStrapiHomepage.nodes[0].heroImage.localFile.childrenImageSharp[0].gatsbyImageData);\n  // const [ref, isVisible] = useInView();\n  \n  return (\n    <>\n      <Layout>\n        {/* Hero */}\n        <Hero\n          title={allStrapiHomepage.nodes[0].Title}\n          image={heroImgData}\n        />\n\n        <FeaturedCreator />\n\n        <div className=\"container-white px-5 pt-12 lg:pt-24 rounded-2xl\">\n          <Newsletter />\n        </div>\n\n        <MonthlyCTA />\n        \n        <div className=\"container-white px-5 pt-12 lg:pt-24 rounded-2xl\">\n\n          {/* Products */}\n          <h2 className=\"text-center mb-4\">Latest products</h2>\n          <p className=\"max-w-4xl text-center mx-auto mb-12 text-xl\">Whether you're a beginner or a pro, our presets are designed to enhance your photos with beautiful tones and a unique styleâ€”helping you achieve the look you love with just few clicks.</p>\n          <Columns columns=\"3\">\n            {nodes.map((column: any, i: number) => {\n              // const { published, slug, featuredImage } = column.node?.frontmatter;\n              const { featuredImage, Slug } = column;\n              \n              return (\n                // <Column key={i} image={featuredImage} href={`/product/${slug}`} itemId={slug}/>\n                <Column key={i} image={featuredImage} href={`/product/${Slug}`} itemId={''}/>\n              )\n            })}\n          </Columns>\n\n        </div>\n\n      </Layout>\n    </>\n  )\n}\n\nexport default IndexPage\n\nexport { Head } from \"../seo/head\"\n\nexport const pageQuery = graphql`\n  query Homepage {\n    allStrapiProduct(\n        sort: {createdAt: DESC}\n        limit: 6\n      ) {\n      nodes {\n        Slug\n        productLink\n        featuredImage {\n          localFile {\n            childImageSharp {\n              gatsbyImageData(width: 600)\n            }\n          }\n        }\n      }\n    }\n    allStrapiHomepage {\n      nodes {\n        Title\n        heroImage {\n          localFile {\n            childrenImageSharp {\n              gatsbyImageData(width: 2400)\n            }\n          }\n        }\n      }\n    }\n  }\n`;","import React from \"react\";\n\nconst Newsletter: React.FC = () => {\n    React.useEffect(() => {\n        console.log('okok');\n        \n        function gtag_report_conversion(url) {\n            // var callback = function () {\n            //     if (typeof (url) != 'undefined') {\n            //         window.location = url;\n            //     }\n            // };\n            if (typeof gtag !== 'undefined') { \n                console.log('Form filled');\n                \n                gtag('event', 'conversion', {\n                    'send_to': 'AW-17489591823/q0ZICN7k6IsbEI_815NB',\n                    // 'event_callback': callback\n                });\n            };\n            return false;\n        }\n\n        // Attach global listener (capture phase)\n        document.addEventListener(\"submit\", gtag_report_conversion, true);\n\n        // Cleanup on unmount\n        return () => {\n            document.removeEventListener(\"submit\", gtag_report_conversion, true);\n        };\n    }, []);\n    \n    return (\n        <>\n            {/* Newsletter  TODO: make a component*/}\n            <h2 className={`text-center mb-8`} >Newsletter</h2>\n            <p className=\"max-w-2xl text-center mx-auto mb-4 text-xl\">Join our newsletter and unlock a free <b>6-pack of Lightroom presets</b> designed to make your photos stand out.</p>\n            <div className=\"text-center ml-embedded pb-12 lg:pb-32 min-h-[236px] lg:min-h-[316px]\" data-form=\"ndBhtT\"></div>\n        </>\n    )\n}\n\nexport default Newsletter","import React from \"react\";\n\ntype SpanTextProps = {\n    text: string;\n    delay: number;\n};\n\nconst SpanText: React.FC<SpanTextProps> = ({ text, delay = 0.05 }) => {\n    return (\n        <span className=\"animated-letter\">\n            {text.split(\" \").map((word, i) => (\n                <span className=\"word\" key={i}>\n                    {word.split(\"\").map((letter, j) => (\n                        <span className=\"letter\" \n                            key={j}\n                            style={{ animationDelay: `${j * delay}s` }}\n                        >\n                            {letter}\n                        </span>\n                    ))}\n                    <span>&nbsp;</span>\n                </span>\n            ))}\n            {/* {text.split(\"\").map((char, index) => (\n                <span \n                    key={index}\n                    style={{ animationDelay: `${index * delay}s`}}\n                >\n                    {char}\n                </span>\n            ))} */}\n        </span>\n    );\n};\n\n// Usage Example\nexport default SpanText;\n","import * as React from \"react\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport type { Image } from \"../project-types\";\n\n/*\n * Types\n */\ninterface ColumnProps {\n  image: Image;\n  href: string;\n  itemId: number;\n}\n\n/*\n * Style\n */\n\nconst Column: React.FC<ColumnProps> = (props) => {\n  const { image, href, itemId } = props\n  let featuredImg = getImage(image?.localFile.childImageSharp.gatsbyImageData)\n  \n  return (\n    <a\n      href={href} \n      className={`column relative flex-1 w-full min-w-[30%] rounded overflow-hidden`}\n      onClick={() =>{\n        sa_event(`click_product`);\n        sa_event(`click_product ${itemId}}`);\n      }}\n    >\n      <GatsbyImage image={featuredImg} alt={''} />\n    </a>\n  );\n}\n\nexport default Column\n"],"names":["_ref","title","image","console","log","React","className","SpanText","text","delay","GatsbyImage","loading","alt","data","useStaticQuery","featuredImage","productLink","allMarkdownRemark","edges","node","frontmatter","FirstName","LastName","Avatar","Slug","strapiCreator","featuredImageData","getImage","childImageSharp","creatorImg","localFile","gatsbyImageData","Columns","columns","gap","href","onClick","sa_event","Button","color","link","allStrapiHomepage","allStrapiProduct","nodes","heroImgData","heroImage","childrenImageSharp","Layout","Hero","Title","FeaturedCreator","Newsletter","MonthlyCTA","map","column","i","Column","key","itemId","gtag_report_conversion","url","gtag","document","addEventListener","removeEventListener","split","word","letter","j","style","animationDelay","props","featuredImg"],"sourceRoot":""}