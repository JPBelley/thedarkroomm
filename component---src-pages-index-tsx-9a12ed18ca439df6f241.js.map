{"version":3,"file":"component---src-pages-index-tsx-9a12ed18ca439df6f241.js","mappings":"wMAmBA,MAjBkB,SAACA,QAAS,IAATA,IAAAA,EAAY,GAC3B,MAAMC,GAAMC,EAAAA,EAAAA,QAAO,OACb,EAACC,EAAU,EAACC,IAAgBC,EAAAA,EAAAA,WAAS,GAY3C,OAVAC,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAW,IAAIC,sBACjBC,IAAAA,IAAEC,GAAM,SAAKN,EAAaM,EAAMC,eAAe,GAC/C,CAAEX,cAIN,OADIC,EAAIW,SAASL,EAASM,QAAQZ,EAAIW,SAC/B,IAAML,EAASO,YAAY,GACnC,CAACd,IAEG,CAACC,EAAKE,EACjB,E,UCjBA,EAAe,IAA0B,4D,UCuCzC,MAvBkCM,IAAc,IAAb,MAACM,GAAM,EASxC,OACEC,EAAAA,cAAAA,MAAAA,CAAKC,UAAS,iFACZD,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,cACZD,EAAAA,cAACE,EAAAA,EAAQ,CACPC,KAAMJ,EACNK,MAAO,OAIXJ,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,gDAAgDI,OAAQ,IAAMC,MAAO,IAAMC,IAAKC,EAAYC,IAAI,eAAeC,QAAQ,UAClI,E,oBCHV,MAfuCC,IAAW,IAAD,EAC/C,MAAM,MAAEC,EAAK,KAAEC,EAAI,OAAEC,GAAWH,EAChC,IAAII,GAAcC,EAAAA,EAAAA,GAASJ,SAAsB,QAAjB,EAALA,EAAOK,uBAAe,WAAjB,EAALC,EAAwBC,iBAEnD,OACEnB,EAAAA,cAAAA,IAAAA,CACEa,KAAMA,EACNZ,UAAS,oEACTmB,QAAS,IAAMC,SAAS,iBAAiBP,EAAM,MAE/Cd,EAAAA,cAACsB,EAAAA,EAAW,CAACV,MAAOG,EAAaN,IAAK,KACpC,E,UCyBR,MAvCuChB,IAAc,IAAb,KAAE8B,GAAM,EAC9C,MAAQC,mBAAmB,MAACC,IAAWF,GAChCtC,EAAKE,GAAauC,IAEzB,OACE1B,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAC2B,EAAAA,EAAM,KAEL3B,EAAAA,cAAC4B,EAAI,CACH7B,MAAM,kBAGRC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,qDAGbD,EAAAA,cAAAA,KAAAA,CAAIC,UAAS,oBAAqBd,EAAY,aAAe,IAAMF,IAAKA,GAAK,cAC7Ee,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,8CAA6C,yCAAsC,yBAAG,+BAA+B,8FAClID,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,yCAAyC,YAAU,WAGlED,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,oBAAmB,YACjCD,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,+CAA8C,2LAC3DD,EAAAA,cAAC6B,EAAAA,EAAO,CAACC,QAAQ,KACdL,EAAMM,KAAI,CAACC,EAAaC,KAAc,MACrC,MAAM,UAAEC,EAAS,KAAEC,EAAI,cAAEC,GAA6B,QAAd,EAAGJ,EAAOK,YAAI,aAAXC,EAAaC,YAExD,OACEL,GAAalC,EAAAA,cAACwC,EAAM,CAACC,IAAKR,EAAGrB,MAAOwB,EAAevB,KAAI,YAAcsB,EAAQrB,OAAQmB,GAAI,OAQlG,C","sources":["webpack://thedarkroomm/./src/utils/use-in-view.ts","webpack://thedarkroomm/./src/content/images/product-0/website-cover.jpg","webpack://thedarkroomm/./src/components/hero/hero.tsx","webpack://thedarkroomm/./src/components/column.tsx","webpack://thedarkroomm/./src/pages/index.tsx"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\n\nconst useInView = (threshold = 1) => {\n    const ref = useRef(null);\n    const [isVisible, setIsVisible] = useState(false);\n\n    useEffect(() => {\n        const observer = new IntersectionObserver(\n            ([entry]) => setIsVisible(entry.isIntersecting),\n            { threshold }\n        );\n\n        if (ref.current) observer.observe(ref.current);\n        return () => observer.disconnect();\n    }, [threshold]);\n\n    return [ref, isVisible];\n};\n\nexport default useInView;\n","export default __webpack_public_path__ + \"static/website-cover-592699554e93835cb771cd7c92e6685a.jpg\";","import React, { useEffect, useState } from \"react\"\n\nimport ConconDune from '../../content/images/product-0/website-cover.jpg';\nimport SpanText from \"../../utils/span-text\";\n\n/*\n * Types\n */\ninterface HeroProps {\n  title: string;\n}\n\n/*\n * Style\n */\n\nconst Hero: React.FC<HeroProps> = ({title}) => {\n  // const [fontsLoaded, setFontsLoaded] = useState(false);\n\n  // useEffect(() => {\n  //   document.fonts.ready.then(() => {\n  //     setFontsLoaded(true);\n  //   });\n  // }, []);\n\n  return (\n    <div className={`hero container relative flex items-center justify-center flex-col text-center`}>\n      <h1 className=\"mt-2 mb-16\">\n        <SpanText \n          text={title}\n          delay={.04}\n        />\n      </h1>\n      \n      <img className=\"object-cover rounded-2xl w-full max-h-[700px]\" height={2000} width={3000} src={ConconDune} alt=\"Concon Dunes\" loading=\"eager\"/>\n    </div>\n  );\n}\n\nexport default Hero\n","import * as React from \"react\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport type { Image } from \"../project-types\";\n\n/*\n * Types\n */\ninterface ColumnProps {\n  image: Image;\n  href: string;\n  itemId: number;\n}\n\n/*\n * Style\n */\n\nconst Column: React.FC<ColumnProps> = (props) => {\n  const { image, href, itemId } = props\n  let featuredImg = getImage(image?.childImageSharp?.gatsbyImageData)\n  \n  return (\n    <a\n      href={href} \n      className={`column relative flex-1 w-full min-w-[30%] rounded overflow-hidden`}\n      onClick={() => sa_event(`click_product ${itemId}}`)}\n    >\n      <GatsbyImage image={featuredImg} alt={''} />\n    </a>\n  );\n}\n\nexport default Column\n","import * as React from \"react\"\nimport type { PageProps } from \"gatsby\"\nimport { graphql } from \"gatsby\"\nimport useInView from \"../utils/use-in-view\";\n\nimport Layout from \"../components/layout/layout\";\nimport Hero from \"../components/hero/hero\";\nimport Columns from \"../components/columns\";\nimport Column from \"../components/column\";\n\n// Import Swiper styles\nimport 'swiper/css';\nimport '../styles/index.scss';\n\nconst IndexPage: React.FC<PageProps> = ({ data }) => {\n  const { allMarkdownRemark: {edges} } = data \n  const [ref, isVisible] = useInView();\n\n  return (\n    <>\n      <Layout>\n        {/* Hero */}\n        <Hero\n          title=\"The Darkroomm\"\n        />\n\n        <div className=\"container-white px-5 pt-12 lg:pt-24 rounded-b-2xl\">\n\n          {/* Newsletter  TODO: make a component*/}\n          <h2 className={`text-center mb-8${isVisible ? ' font-bold' : ''}`} ref={ref}>Newsletter</h2>\n          <p className=\"max-w-4xl text-center mx-auto mb-4 text-xl\">Join our newsletter and unlock a free <b>6-pack of Lightroom presets</b>—designed to make your photos stand out. Plus, get insider editing tips and VIP discounts!</p>\n          <div className=\"text-center ml-embedded pb-12 lg:pb-32\" data-form=\"ndBhtT\"></div>\n\n          {/* Portfolio */}\n          <h2 className=\"text-center mb-4\">Products</h2>\n          <p className=\"max-w-4xl text-center mx-auto mb-12 text-xl\">Whether you're a beginner or a pro, our presets are designed to enhance your photos with beautiful tones and a unique style—helping you achieve the look you love with just few clicks.</p>\n          <Columns columns=\"3\">\n            {edges.map((column: any, i: number) => {\n              const { published, slug, featuredImage } = column.node?.frontmatter;\n\n              return (\n                published && <Column key={i} image={featuredImage} href={`/product/${slug}`} itemId={i}/>\n              )\n            })}\n          </Columns>\n\n        </div>\n\n      </Layout>\n    </>\n  )\n}\n\nexport default IndexPage\n\nexport { Head } from \"../seo/head\"\n\nexport const pageQuery = graphql`\n  query Products {\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            published\n            slug\n            title\n            etsyLink\n            featuredImage {\n              childImageSharp {\n                gatsbyImageData(width: 600)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;"],"names":["threshold","ref","useRef","isVisible","setIsVisible","useState","useEffect","observer","IntersectionObserver","_ref","entry","isIntersecting","current","observe","disconnect","title","React","className","SpanText","text","delay","height","width","src","ConconDune","alt","loading","props","image","href","itemId","featuredImg","getImage","childImageSharp","_image$childImageShar","gatsbyImageData","onClick","sa_event","GatsbyImage","data","allMarkdownRemark","edges","useInView","Layout","Hero","Columns","columns","map","column","i","published","slug","featuredImage","node","_column$node","frontmatter","Column","key"],"sourceRoot":""}