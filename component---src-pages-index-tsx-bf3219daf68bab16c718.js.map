{"version":3,"file":"component---src-pages-index-tsx-bf3219daf68bab16c718.js","mappings":"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","sources":["webpack://thedarkroomm/./src/components/columns.tsx","webpack://thedarkroomm/./src/components/before-n-after/before-n-after.tsx","webpack://thedarkroomm/./src/components/hero/hero.tsx","webpack://thedarkroomm/./src/components/featured-creator/featured-creator.tsx","webpack://thedarkroomm/./src/pages/index.tsx","webpack://thedarkroomm/./src/components/card/card.tsx","webpack://thedarkroomm/./src/components/newsletter/Newsletter.tsx","webpack://thedarkroomm/./src/utils/span-text.tsx","webpack://thedarkroomm/./src/content/images/monthly-subscription/monthly-subcription-cover.jpg","webpack://thedarkroomm/./src/components/monthly-cta/monthly-cta.tsx"],"sourcesContent":["import * as React from \"react\"\n\ninterface ColumnsProps {\n  children: React.ReactNode;\n  gap?: string;\n  columns?: string;\n}\n\nconst Columns = ({ children, gap = \"4\", columns = \"2\" }: ColumnsProps) => {\n  const classesTemps = ['grid-cols-2', 'grid-cols-3', 'grid-cols-4', 'gap-16'];\n \n  return (\n    <>\n      <div className={`flex md:grid grid-cols-${columns} w-full container gap-${gap} pb-12 lg:pb-28 flex-col text-center`}>\n        {children}\n      </div>\n    </>\n  );\n}\n\nexport default Columns\n","// import type React from \"react\"\n\nimport React, { useState, useRef, useCallback, useEffect, MouseEvent, TouchEvent } from \"react\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\ninterface BeforeAfterComparisonProps {\n    beforeImage: string\n    afterImage: any\n    beforeLabel?: string\n    afterLabel?: string\n    className?: string\n}\n\nexport default function BeforeAfterComparison({\n    beforeImage,\n    afterImage,\n    beforeLabel = \"Before\",\n    afterLabel = \"After\",\n    className = \"\",\n    image,\n}: BeforeAfterComparisonProps) {\n    const [sliderPosition, setSliderPosition] = useState(50)\n    const [isDragging, setIsDragging] = useState(false)\n    const containerRef = useRef<HTMLDivElement>(null)\n\n    const handleMouseDown = useCallback((e: MouseEvent) => {\n        setIsDragging(true)\n        e.preventDefault()\n    }, [])\n\n    const handleMouseMove = useCallback(\n        (e: MouseEvent) => {\n            if (!isDragging || !containerRef.current) return\n\n            const rect = containerRef.current.getBoundingClientRect()\n            const x = e.clientX - rect.left\n            const percentage = Math.max(0, Math.min(100, (x / rect.width) * 100))\n            setSliderPosition(percentage)\n        },\n        [isDragging],\n    )\n\n    const handleMouseUp = useCallback(() => {\n        setIsDragging(false)\n    }, [])\n\n    const handleTouchStart = useCallback((e: TouchEvent) => {\n        setIsDragging(true)\n        e.preventDefault()\n    }, [])\n\n    const handleTouchMove = useCallback(\n        (e: TouchEvent) => {\n            if (!isDragging || !containerRef.current) return\n\n            const rect = containerRef.current.getBoundingClientRect()\n            const x = e.touches[0].clientX - rect.left\n            const percentage = Math.max(0, Math.min(100, (x / rect.width) * 100))\n            setSliderPosition(percentage)\n        },\n        [isDragging],\n    )\n\n    const handleTouchEnd = useCallback(() => {\n        setIsDragging(false)\n    }, [])\n\n    useEffect(() => {\n        if (isDragging) {\n            document.addEventListener(\"mousemove\", handleMouseMove)\n            document.addEventListener(\"mouseup\", handleMouseUp)\n            document.addEventListener(\"touchmove\", handleTouchMove)\n            document.addEventListener(\"touchend\", handleTouchEnd)\n        }\n\n        return () => {\n            document.removeEventListener(\"mousemove\", handleMouseMove)\n            document.removeEventListener(\"mouseup\", handleMouseUp)\n            document.removeEventListener(\"touchmove\", handleTouchMove)\n            document.removeEventListener(\"touchend\", handleTouchEnd)\n        }\n    }, [isDragging, handleMouseMove, handleMouseUp, handleTouchMove, handleTouchEnd])\n\n    return (\n        <div className={`overflow-hidden ${className}`}>\n            <div className=\"p-0\">\n                <div\n                    ref={containerRef}\n                    className=\"relative w-full overflow-hidden cursor-col-resize select-none\"\n                    style={{ touchAction: \"none\" }}\n                >\n                    {/* After Image */}\n                    <div className=\"inset-0\">\n                        <GatsbyImage\n                            className=\"object-cover rounded-2xl w-full\"\n                            loading=\"eager\"\n                            image={afterImage}\n                            alt={'Hero image'}\n                        />\n                        <div className=\"absolute top-4 left-4 bg-black text-white px-3 py-1 rounded-full text-sm font-medium\">\n                            {afterLabel}\n                        </div>\n                    </div>\n\n                    {/* After Image */}\n                    <div\n                        className=\"absolute inset-0 overflow-hidden\"\n                        style={{ clipPath: `inset(0 ${100 - sliderPosition}% 0 0)` }}\n                    >\n                        <GatsbyImage\n                            className=\"object-cover rounded-2xl w-full\"\n                            loading=\"eager\" \n                            image={image}\n                            alt={'Hero image'}\n                        />\n                        <img\n                            src={afterImage || \"/placeholder.svg\"}\n                            alt={beforeLabel}\n                            className=\"w-full h-full object-cover\"\n                            draggable={false}\n                        />\n                        <div className=\"absolute top-4 right-4 bg-black text-white px-3 py-1 rounded-full text-sm font-medium\">\n                            {beforeLabel}\n                        </div>\n                    </div>\n\n                    {/* Slider Line and Handle */}\n                    <div\n                        className=\"absolute top-0 bottom-0 w-1 bg-black shadow-lg z-10 pointer-events-none\"\n                        style={{ left: `${sliderPosition}%` }}\n                    >\n                        {/* Slider Handle */}\n                        <div\n                            className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-8 h-8 bg-white rounded-full shadow-lg border-2 border-black cursor-col-resize pointer-events-auto flex items-center justify-center hover:bg-gray-50 transition-colors\"\n                            onMouseDown={handleMouseDown}\n                            onTouchStart={handleTouchStart}\n                        >\n                            <div className=\"flex space-x-0.5\">\n                                <div className=\"w-0.5 h-4 bg-black rounded-full\"></div>\n                                <div className=\"w-0.5 h-4 bg-black rounded-full\"></div>\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* Invisible drag area for better UX */}\n                    <div\n                        className=\"absolute inset-0 cursor-col-resize\"\n                        onMouseDown={(e) => {\n                            if (!containerRef.current) return\n                            const rect = containerRef.current.getBoundingClientRect()\n                            const x = e.clientX - rect.left\n                            const percentage = Math.max(0, Math.min(100, (x / rect.width) * 100))\n                            setSliderPosition(percentage)\n                            setIsDragging(true)\n                            e.preventDefault()\n                        }}\n                        onTouchStart={(e) => {\n                            if (!containerRef.current) return\n                            const rect = containerRef.current.getBoundingClientRect()\n                            const x = e.touches[0].clientX - rect.left\n                            const percentage = Math.max(0, Math.min(100, (x / rect.width) * 100))\n                            setSliderPosition(percentage)\n                            setIsDragging(true)\n                            e.preventDefault()\n                        }}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from \"react\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nimport SpanText from \"../../utils/span-text\";\nimport BeforeAfterComparison from \"../../components/before-n-after/before-n-after\"\n\n/*\n * Types\n */\ninterface HeroProps {\n  title: string;\n  image: any\n  afterImage?: any\n}\n\n/*\n * Style\n */\n\nconst Hero: React.FC<HeroProps> = ({ title, image, afterImage }) => {\n  \n  return (\n    <div className={`hero container relative flex items-center justify-center flex-col text-center`}>\n      <h1 className=\"mt-8 mb-8\">\n        <SpanText \n          text={title}\n          delay={.04}\n        />\n      </h1>\n\n      <BeforeAfterComparison image={image} afterImage={afterImage} />\n      {/* <GatsbyImage\n        className=\"object-cover rounded-2xl w-full max-h-[700px]\"\n        loading=\"eager\" \n        image={image}\n        alt={'Hero image'}\n      /> */}\n    </div>\n  );\n}\n\nexport default Hero\n","import React from \"react\"\nimport Columns from \"../columns\";\nimport Button from \"../../design-system/button/button\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\nconst FeaturedCreator: React.FC = ({ }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(\n        filter: { fileAbsolutePath: { regex: \"/creators/\" }, frontmatter: { published: { eq: true }, name: { eq: \"JP Belley\" } } }\n        sort: { frontmatter: { date: DESC } }\n        limit: 2\n      ) {\n        edges {\n          node {\n            frontmatter {\n              published\n              productLink\n              featuredImage {\n                childImageSharp {\n                  gatsbyImageData(width: 600)\n                }\n              }\n            }\n            id\n          }\n        }\n      }\n      strapiCreator(Slug: {eq: \"jp-belley\"}) {\n        FirstName\n        LastName\n        Slug\n        Avatar {\n          localFile {\n            childImageSharp {\n              gatsbyImageData(width: 150, layout: FIXED)\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const { featuredImage, productLink } = data.allMarkdownRemark.edges[0].node.frontmatter;\n  const { FirstName, LastName, Avatar, Slug } = data.strapiCreator;\n  const featuredImageData = getImage(featuredImage.childImageSharp)\n  const creatorImg = getImage(Avatar.localFile.childImageSharp.gatsbyImageData);\n\n  return (\n    <>\n      {/* Featured Creator */ }\n      <section className = \"container-black px-5 pt-12 lg:pt-28\">\n        <h2 className=\"text-center mt-0 mb-12\">Featured creator</h2>\n        <Columns columns=\"2\" gap=\"16\">\n          <div className=\"lg:text-left flex flex-col justify-center gap-4\">\n            <a \n              href={`/creator/${Slug}`} \n              className=\"mx-auto lg:mx-0 w-max outline-4 hover:outline duration-300 rounded-full overflow-hidden box-border\"\n              onClick={() => sa_event(\"click_creator_profile\")}\n            >\n              <GatsbyImage\n                className=\"hover:scale-110 duration-300\"\n                image={creatorImg} \n                alt={`${FirstName} ${LastName}`} \n              />\n            </a>\n            <div>\n              <h2 className=\"mt-0 mb-4\">Crafted by {FirstName} {LastName}. Built for Storytelling</h2>\n              <Button\n                text=\"See presets\"\n                color=\"dark\"\n                link={productLink}\n                onClick={() => {\n                  sa_event(`click_product`);\n                  sa_event(\"click_creator_product\")}\n                }\n              />\n            </div>\n          </div>\n          <div>\n            <a\n              href={productLink}\n              onClick={() => {\n                sa_event(`click_product`);\n                sa_event(\"click_creator_product\");\n              }}\n            >\n              <GatsbyImage\n                className={`rounded overflow-hidden`}\n                image={featuredImageData}\n                alt={''}\n              />\n            </a>\n          </div>\n        </Columns>\n      </section>\n    </>\n  );\n}\n\nexport default FeaturedCreator;\n","import * as React from \"react\"\nimport type { PageProps } from \"gatsby\"\nimport { graphql } from \"gatsby\"\nimport { getImage } from \"gatsby-plugin-image\"\n// import useInView from \"../utils/use-in-view\";\n\nimport Layout from \"../components/layout/layout\";\nimport Hero from \"../components/hero/hero\";\nimport Columns from \"../components/columns\";\nimport Card from \"../components/card/card\";\nimport MonthlyCTA from \"../components/monthly-cta/monthly-cta\";\n\n// Import Swiper styles\nimport 'swiper/css';\nimport Newsletter from \"../components/newsletter/Newsletter\";\nimport FeaturedCreator from \"../components/featured-creator/featured-creator\";\n\nconst IndexPage: React.FC<PageProps> = ({ data }) => {\n  const { allStrapiHomepage, allStrapiProduct: {nodes} } = data;\n  const heroImgData = getImage(allStrapiHomepage.nodes[0].heroImageOriginal.localFile.childrenImageSharp[0].gatsbyImageData);\n  const heroImgAfterData = getImage(allStrapiHomepage.nodes[0].heroImageModified.localFile.childrenImageSharp[0].gatsbyImageData);\n  // const [ref, isVisible] = useInView();\n  \n  return (\n    <>\n      <Layout>\n        {/* Hero */}\n        <Hero\n          title={allStrapiHomepage.nodes[0].Title}\n          image={heroImgData}\n          afterImage={heroImgAfterData}\n        />\n\n        <FeaturedCreator />\n\n        <div className=\"container-white px-5 pt-12 lg:pt-24 rounded-2xl\">\n          <Newsletter />\n        </div>\n\n        <MonthlyCTA />\n        \n        <div className=\"container-white px-5 pt-12 lg:pt-24 rounded-2xl\">\n\n          {/* Products */}\n          <h2 className=\"text-center mb-4\">Latest products</h2>\n          <p className=\"max-w-4xl text-center mx-auto mb-12 text-xl\">Whether you're a beginner or a pro, our presets are designed to enhance your photos with beautiful tones and a unique style—helping you achieve the look you love with just few clicks.</p>\n          <Columns columns=\"3\">\n            {nodes.map((column: any, i: number) => {\n              const { featuredImage, Slug, category, Title } = column;              \n              \n              return (\n                <Card \n                  key={i}\n                  card={column}\n                  image={featuredImage}\n                  href={`/product/${Slug}`} \n                  itemId={''} \n                  category={category.name} \n                  title={Title}\n                />\n              )\n            })}\n          </Columns>\n\n        </div>\n\n      </Layout>\n    </>\n  )\n}\n\nexport default IndexPage\n\nexport { Head } from \"../seo/head\"\n\nexport const pageQuery = graphql`\n  query Homepage {\n    allStrapiProduct(\n        sort: {createdAt: DESC}\n        limit: 6\n      ) {\n      nodes {\n        Slug\n        Title\n        productLink\n        category {\n          name\n        }\n        featuredImage {\n          localFile {\n            childImageSharp {\n              gatsbyImageData(width: 600)\n            }\n          }\n        }\n      }\n    }\n    allStrapiHomepage {\n      nodes {\n        Title\n        heroImageOriginal {\n          localFile {\n            childrenImageSharp {\n              gatsbyImageData(width: 2400)\n            }\n          }\n        }\n        heroImageModified {\n          localFile {\n            childrenImageSharp {\n              gatsbyImageData(width: 2400)\n            }\n          }\n        }\n      }\n    }\n  }\n`;","import * as React from \"react\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport type { Image } from \"../../project-types\";\n\n/*\n * Types\n */\ninterface CardProps {\n  image: Image;\n  href: string;\n  title: string;\n  itemId: number;\n  category?: string;\n  card: any;\n  size?: \"small\" | \"medium\" | \"large\";\n}\n\n/*\n * Style\n */\n\nconst Card: React.FC<CardProps> = (props) => {\n  const { image, href, itemId, category, title, size = \"medium\" } = props;\n  let featuredImg = getImage(image?.localFile.childImageSharp.gatsbyImageData)\n\n  return (\n    <a\n      href={href} \n      className={`card relative flex-1 w-full min-w-[30%] rounded overflow-hidden flex justify-center items-center ${size}`}\n      onClick={() =>{\n        sa_event(`click_product`);\n        sa_event(`click_product ${itemId}}`);\n      }}\n    >\n      <div className=\"overlay\"></div>\n      <div className={`card-info absolute z-10 text-white uppercase flex flex-col items-center tracking-tight`}>\n        {category && <h3 \n          className=\"category m-0\"\n          >\n            {category}\n          </h3>\n        }\n        <p className=\"card-title font-bold relative\">{title}</p>\n      </div>\n      <GatsbyImage image={featuredImg} alt={''} />\n    </a>\n  );\n}\n\nexport default Card\n","import React from \"react\";\n\nconst Newsletter: React.FC = () => {\n    React.useEffect(() => {\n        \n        function gtag_report_conversion(url) {\n            // var callback = function () {\n            //     if (typeof (url) != 'undefined') {\n            //         window.location = url;\n            //     }\n            // };\n            if (typeof gtag !== 'undefined') { \n                console.log('Form filled');\n                \n                gtag('event', 'conversion', {\n                    'send_to': 'AW-17489591823/q0ZICN7k6IsbEI_815NB',\n                    // 'event_callback': callback\n                });\n            };\n            return false;\n        }\n\n        // Attach global listener (capture phase)\n        document.addEventListener(\"submit\", gtag_report_conversion, true);\n\n        // Cleanup on unmount\n        return () => {\n            document.removeEventListener(\"submit\", gtag_report_conversion, true);\n        };\n    }, []);\n    \n    return (\n        <>\n            {/* Newsletter  TODO: make a component*/}\n            <h2 className={`text-center mb-8`} >Newsletter</h2>\n            <p className=\"max-w-2xl text-center mx-auto mb-4 text-xl\">Join our newsletter and unlock a free <b>6-pack of Lightroom presets</b> designed to make your photos stand out.</p>\n            <div className=\"text-center ml-embedded pb-12 lg:pb-32 min-h-[236px] lg:min-h-[316px]\" data-form=\"ndBhtT\"></div>\n        </>\n    )\n}\n\nexport default Newsletter","import React from \"react\";\n\ntype SpanTextProps = {\n    text: string;\n    delay: number;\n};\n\nconst SpanText: React.FC<SpanTextProps> = ({ text, delay = 0.05 }) => {\n    return (\n        <span className=\"animated-letter\">\n            {text.split(\" \").map((word, i) => (\n                <span className=\"word\" key={i}>\n                    {word.split(\"\").map((letter, j) => (\n                        <span className=\"letter\" \n                            key={j}\n                            style={{ animationDelay: `${j * delay}s` }}\n                        >\n                            {letter}\n                        </span>\n                    ))}\n                    <span>&nbsp;</span>\n                </span>\n            ))}\n            {/* {text.split(\"\").map((char, index) => (\n                <span \n                    key={index}\n                    style={{ animationDelay: `${index * delay}s`}}\n                >\n                    {char}\n                </span>\n            ))} */}\n        </span>\n    );\n};\n\n// Usage Example\nexport default SpanText;\n","export default __webpack_public_path__ + \"static/monthly-subcription-cover-ba138bee2a79c6122793ba3b1873bc74.jpg\";","import React from \"react\"\nimport Columns from \"../columns\";\nimport Button from \"../../design-system/button/button\";\nimport MonthlySubscriptionImg from '../../content/images/monthly-subscription/monthly-subcription-cover.jpg';\n\nconst MonthlyCTA: React.FC = () => {\n\n  return (\n    <>\n      {/* Membership CTA */ }\n      <section className = \"container-black px-5 pt-12 lg:pt-28\" >\n        <Columns columns=\"2\" gap=\"16\">\n          <div>\n            <img className=\"object-cover rounded-2xl w-full max-h-[700px]\" height={2000} width={3000} src={MonthlySubscriptionImg} alt=\"Concon Dunes\" loading=\"eager\" />\n          </div>\n          <div className=\"text-left flex flex-col justify-center\">\n            <h2 className=\"mb-4\">Elevate your edits every month.</h2>\n            <p className=\"mb-4 text-xl\">Get fresh, professionally crafted Lightroom presets delivered monthly to keep your photo style evolving. Perfect for photographers and creators who love staying inspired.</p>\n            <div>\n              <Button\n                text=\"Subscribe now\"\n                color=\"dark\"\n                link=\"https://thedarkroomm.gumroad.com/l/monthly-lightroom-presets\"\n                target=\"_blank\"\n                onClick={() => sa_event(\"buy_monthly_subscription\")}\n              />\n            </div>\n          </div>\n        </Columns>\n      </section>\n    </>\n  );\n}\n\nexport default MonthlyCTA\n"],"names":["_ref","children","gap","columns","React","className","BeforeAfterComparison","beforeImage","afterImage","beforeLabel","afterLabel","image","sliderPosition","setSliderPosition","useState","isDragging","setIsDragging","containerRef","useRef","handleMouseDown","useCallback","e","preventDefault","handleMouseMove","current","rect","getBoundingClientRect","x","clientX","left","percentage","Math","max","min","width","handleMouseUp","handleTouchStart","handleTouchMove","touches","handleTouchEnd","useEffect","document","addEventListener","removeEventListener","ref","style","touchAction","GatsbyImage","loading","alt","clipPath","src","draggable","onMouseDown","onTouchStart","title","SpanText","text","delay","data","useStaticQuery","featuredImage","productLink","allMarkdownRemark","edges","node","frontmatter","FirstName","LastName","Avatar","Slug","strapiCreator","featuredImageData","getImage","childImageSharp","creatorImg","localFile","gatsbyImageData","Columns","href","onClick","sa_event","Button","color","link","allStrapiHomepage","allStrapiProduct","nodes","heroImgData","heroImageOriginal","childrenImageSharp","heroImgAfterData","heroImageModified","Layout","Hero","Title","FeaturedCreator","Newsletter","MonthlyCTA","map","column","i","category","Card","key","card","itemId","name","props","size","featuredImg","gtag_report_conversion","url","gtag","console","log","split","word","letter","j","animationDelay","height","MonthlySubscriptionImg","target"],"sourceRoot":""}