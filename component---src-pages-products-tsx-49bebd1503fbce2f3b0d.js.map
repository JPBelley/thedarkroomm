{"version":3,"file":"component---src-pages-products-tsx-49bebd1503fbce2f3b0d.js","mappings":"kJAuCA,IAtBkCA,IAAoC,IAAnC,MAAEC,EAAK,YAAEC,EAAW,MAAEC,GAAO,EAE9D,OACEC,EAAAA,cAAAA,MAAAA,CAAKC,UAAS,iFACZD,EAAAA,cAAAA,KAAAA,CAAIC,UAAS,mBAAsBH,EAAc,eAAiB,kBAChEE,EAAAA,cAACE,EAAAA,EAAQ,CACPC,KAAMN,EACNO,MAAO,SAGRN,GAAeE,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,+CAA+CH,KAC3EC,GAASC,EAAAA,cAACK,EAAAA,EAAW,CACtBJ,UAAU,mDACVF,MAAOA,EACPO,IAAKT,K,qJCmBb,UAlCuCD,IAAc,IAAb,KAAEW,GAAM,EAC9C,MAAQC,mBAAmB,MAACC,IAAWF,EAGvC,OACEP,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACU,EAAAA,EAAM,KACLV,EAAAA,cAACW,EAAAA,EAAI,CACHd,MAAM,WACNC,YAAY,4LAEdE,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,mDACbD,EAAAA,cAACY,EAAAA,EAAO,CAACC,QAAQ,KACdJ,EAAMK,KAAI,CAACC,EAAaC,KAAc,MACrC,MAAM,UAAEC,EAAS,KAAEC,EAAI,cAAEC,GAA6B,QAAd,EAAGJ,EAAOK,YAAI,aAAXC,EAAaC,YAExD,OACEL,GAAajB,EAAAA,cAACuB,EAAAA,EAAM,CAACC,IAAKR,EAAGjB,MAAOoB,EAAeM,KAAI,YAAcP,EAAQQ,OAAQR,SAO7FlB,EAAAA,cAAC2B,EAAAA,EAAU,MAEX3B,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,mDACbD,EAAAA,cAAC4B,EAAAA,EAAU,S,+CCRrB,IAlBuCC,IAAW,IAAD,EAC/C,MAAM,MAAE9B,EAAK,KAAE0B,EAAI,OAAEC,GAAWG,EAChC,IAAIC,GAAcC,EAAAA,EAAAA,GAAShC,SAAsB,QAAjB,EAALA,EAAOiC,uBAAe,WAAjB,EAALC,EAAwBC,iBAEnD,OACElC,EAAAA,cAAAA,IAAAA,CACEyB,KAAMA,EACNxB,UAAS,oEACTkC,QAAS,KACPC,SAAS,iBACTA,SAAS,iBAAiBV,EAAM,OAGlC1B,EAAAA,cAACK,EAAAA,EAAW,CAACN,MAAO+B,EAAaxB,IAAK,M","sources":["webpack://thedarkroomm/./src/components/hero-product/hero.tsx","webpack://thedarkroomm/./src/pages/products.tsx","webpack://thedarkroomm/./src/components/column.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport SpanText from \"../../utils/span-text\";\n\n/*\n * Types\n */\ninterface HeroProps {\n  title: string;\n  description?: string;\n  image?: any;\n}\n\n/*\n * Style\n */\n\nconst Hero: React.FC<HeroProps> = ({ title, description, image }) => {\n\n  return (\n    <div className={`hero container relative flex items-center justify-center flex-col text-center`}>\n      <h1 className={`mt-8 max-w-5xl ${!!description ? 'mb-2 lg:mb-4' : 'mb-8 lg:mb-16'}`}>\n        <SpanText\n          text={title}\n          delay={.04}\n        />\n      </h1>\n      {!!description && <p className=\"max-w-4xl text-center mx-auto mb-12 text-xl\">{description}</p>}\n      {!!image && <GatsbyImage \n        className=\"rounded-t-2xl w-full max-h-[700px] min-h-[300px]\"\n        image={image} \n        alt={title}\n      />}\n\n      {/* <img className=\"object-cover rounded-2xl w-full max-h-[700px]\" height={2000} width={3000} src={ConconDune} alt=\"Concon Dunes\" loading=\"eager\"/> */}\n    </div>\n  );\n}\n\nexport default Hero\n","import * as React from \"react\"\nimport type { PageProps } from \"gatsby\"\nimport { graphql } from \"gatsby\"\n// import useInView from \"../utils/use-in-view\";\n\nimport Layout from \"../components/layout/layout\";\nimport Hero from \"../components/hero-product/hero\";\nimport Columns from \"../components/columns\";\nimport Column from \"../components/column\";\nimport MonthlyCTA from \"../components/monthly-cta/monthly-cta\";\n\n// Import Swiper styles\nimport 'swiper/css';\nimport '../styles/index.scss';\nimport Newsletter from \"../components/newsletter/Newsletter\";\n\nconst IndexPage: React.FC<PageProps> = ({ data }) => {\n  const { allMarkdownRemark: {edges} } = data \n  // const [ref, isVisible] = useInView();\n\n  return (\n    <>\n      <Layout>\n        <Hero\n          title='Products'\n          description=\"Whether you're a beginner or a pro, our presets are designed to enhance your photos with beautiful tones and a unique styleâ€”helping you achieve the look you love with just few clicks.\"\n        />\n        <div className=\"container-white px-5 pt-12 lg:pt-24 rounded-2xl\">\n          <Columns columns=\"3\">\n            {edges.map((column: any, i: number) => {\n              const { published, slug, featuredImage } = column.node?.frontmatter;\n\n              return (\n                published && <Column key={i} image={featuredImage} href={`/product/${slug}`} itemId={slug}/>\n              )\n            })}\n          </Columns>\n\n        </div>\n\n        <MonthlyCTA />\n        \n        <div className=\"container-white px-5 pt-12 lg:pt-24 rounded-2xl\">\n          <Newsletter />\n        </div>\n      </Layout>\n    </>\n  )\n}\n\nexport default IndexPage\n\nexport { Head } from \"../seo/head\"\n\nexport const pageQuery = graphql`\n  query Products {\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            published\n            slug\n            title\n            etsyLink\n            featuredImage {\n              childImageSharp {\n                gatsbyImageData(width: 600)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;","import * as React from \"react\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport type { Image } from \"../project-types\";\n\n/*\n * Types\n */\ninterface ColumnProps {\n  image: Image;\n  href: string;\n  itemId: number;\n}\n\n/*\n * Style\n */\n\nconst Column: React.FC<ColumnProps> = (props) => {\n  const { image, href, itemId } = props\n  let featuredImg = getImage(image?.childImageSharp?.gatsbyImageData)\n  \n  return (\n    <a\n      href={href} \n      className={`column relative flex-1 w-full min-w-[30%] rounded overflow-hidden`}\n      onClick={() =>{\n        sa_event(`click_product`);\n        sa_event(`click_product ${itemId}}`);\n      }}\n    >\n      <GatsbyImage image={featuredImg} alt={''} />\n    </a>\n  );\n}\n\nexport default Column\n"],"names":["_ref","title","description","image","React","className","SpanText","text","delay","GatsbyImage","alt","data","allMarkdownRemark","edges","Layout","Hero","Columns","columns","map","column","i","published","slug","featuredImage","node","_column$node","frontmatter","Column","key","href","itemId","MonthlyCTA","Newsletter","props","featuredImg","getImage","childImageSharp","_image$childImageShar","gatsbyImageData","onClick","sa_event"],"sourceRoot":""}