{"version":3,"file":"component---src-pages-newsletter-tsx-f4236cc0b1ea9f4cd4f0.js","mappings":"kJAuDA,IArCkCA,IAA4C,IAA3C,MAAEC,EAAK,YAAEC,EAAW,MAAEC,EAAK,QAAEC,GAAS,EACnEC,EAAaD,GAAUE,EAAAA,EAAAA,GAASF,EAAQG,OAAOC,UAAUC,gBAAgBC,iBAAmB,KAEhG,OACEC,EAAAA,cAAAA,MAAAA,CAAKC,UAAY,iFACfD,EAAAA,cAAAA,KAAAA,CAAIC,UAAY,mBAAmBV,GAAiBE,EAAU,eAAiB,kBAC7EO,EAAAA,cAACE,EAAAA,EAAQ,CACPC,KAAMb,EACNc,MAAO,SAIRX,GAAWO,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,yCAC3BD,EAAAA,cAAAA,IAAAA,CACEK,KAAO,YAAWZ,EAAQa,OAC1BL,UAAU,qFACVM,QAAS,IAAMC,SAAS,0BAExBR,EAAAA,cAACS,EAAAA,EAAW,CACVR,UAAU,4CACVT,MAAOE,EACPgB,IAAM,GAAEjB,EAAQkB,aAAalB,EAAQmB,cAGzCZ,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,OAAM,cAAYR,EAAQkB,UAAU,IAAElB,EAAQmB,aAG3DrB,GAAeS,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,+CAA+CV,KAC3EC,GAASQ,EAAAA,cAACS,EAAAA,EAAW,CACtBR,UAAU,qCACVT,MAAOA,EACPkB,IAAKpB,K,qCCRb,IAvC6B,KACzBU,EAAAA,WAAgB,KAEZ,SAASa,EAAuBC,GAc5B,MARoB,oBAATC,OACPC,QAAQC,IAAI,eAEZF,KAAK,QAAS,aAAc,CACxB,QAAW,0CAIZ,CACX,CAMA,OAHAG,SAASC,iBAAiB,SAAUN,GAAwB,GAGrD,KACHK,SAASE,oBAAoB,SAAUP,GAAwB,MAEpE,IAGCb,EAAAA,cAAAA,EAAAA,SAAAA,KAEIA,EAAAA,cAAAA,KAAAA,CAAIC,UAAY,oBAAoB,cACpCD,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,8CAA6C,yCAAsC,yBAAG,+BAA+B,4CAClID,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,wEAAwE,YAAU,Y,4ICW7G,UArC4CZ,IAAe,IAAd,KAAEgC,GAAM,EAEnD,OACErB,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACsB,EAAAA,EAAM,KACLtB,EAAAA,cAACuB,EAAAA,EAAI,CACHjC,MAAM,kCACNC,YAAY,oLAIdS,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,mDACbD,EAAAA,cAACwB,EAAAA,EAAU,OAGbxB,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,6CAGbD,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,oBAAmB,kBACjCD,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,+CAA8C,uTAC3DD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,eACbD,EAAAA,cAACyB,EAAAA,EAAM,CACLtB,KAAK,iBACLuB,MAAM,OACNC,KAAK,IACLpB,QAAS,IAAMC,SAAS,YAK9BR,EAAAA,cAAC4B,EAAAA,EAAU,Q,qCCJnB,IA7B0CvC,IAA6B,IAA5B,KAAEc,EAAI,MAAEC,EAAQ,KAAM,EAC7D,OACIJ,EAAAA,cAAAA,OAAAA,CAAMC,UAAU,mBACXE,EAAK0B,MAAM,KAAKC,KAAI,CAACC,EAAMC,IACxBhC,EAAAA,cAAAA,OAAAA,CAAMC,UAAU,OAAOgC,IAAKD,GACvBD,EAAKF,MAAM,IAAIC,KAAI,CAACI,EAAQC,IACzBnC,EAAAA,cAAAA,OAAAA,CAAMC,UAAU,SACZgC,IAAKE,EACLC,MAAO,CAAEC,eAAmBF,EAAI/B,EAAN,MAEzB8B,KAGTlC,EAAAA,cAAAA,OAAAA,KAAM,S","sources":["webpack://thedarkroomm/./src/components/hero-product/hero.tsx","webpack://thedarkroomm/./src/components/newsletter/Newsletter.tsx","webpack://thedarkroomm/./src/pages/newsletter.tsx","webpack://thedarkroomm/./src/utils/span-text.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport SpanText from \"../../utils/span-text\";\n\n/*\n * Types\n */\ninterface HeroProps {\n  title: string;\n  description?: string;\n  image?: any;\n  creator?: any;\n}\n\n/*\n * Style\n */\n\nconst Hero: React.FC<HeroProps> = ({ title, description, image, creator }) => {\n  let creatorImg = creator ? getImage(creator.Avatar.localFile.childImageSharp.gatsbyImageData) : null;\n\n  return (\n    <div className={`hero container relative flex items-center justify-center flex-col text-center`}>\n      <h1 className={`mt-8 max-w-5xl ${!!description || !!creator ? 'mb-2 lg:mb-4' : 'mb-8 lg:mb-16'}`}>\n        <SpanText\n          text={title}\n          delay={.04}\n        />\n      </h1>\n\n      {!!creator && <div className=\"mb-8 lg:mb-16 flex items-center gap-4\">\n        <a \n          href={`/creator/${creator.Slug}`} \n          className=\"w-max outline-4 hover:outline duration-300 rounded-full overflow-hidden box-border\"\n          onClick={() => sa_event(\"click_creator_profile\")}\n        >\n          <GatsbyImage\n            className=\"hover:scale-110 duration-300 rounded-full\"\n            image={creatorImg}\n            alt={`${creator.FirstName} ${creator.LastName}`}\n          />\n        </a>\n        <h4 className=\"m-0\">created by {creator.FirstName} {creator.LastName}</h4>\n      </div>}\n      \n      {!!description && <p className=\"max-w-4xl text-center mx-auto mb-12 text-xl\">{description}</p>}\n      {!!image && <GatsbyImage \n        className=\"rounded-t-2xl w-full max-h-[700px]\"\n        image={image} \n        alt={title}\n      />}\n    </div>\n  );\n}\n\nexport default Hero\n","import React from \"react\";\n\nconst Newsletter: React.FC = () => {\n    React.useEffect(() => {\n        \n        function gtag_report_conversion(url) {\n            // var callback = function () {\n            //     if (typeof (url) != 'undefined') {\n            //         window.location = url;\n            //     }\n            // };\n            if (typeof gtag !== 'undefined') { \n                console.log('Form filled');\n                \n                gtag('event', 'conversion', {\n                    'send_to': 'AW-17489591823/q0ZICN7k6IsbEI_815NB',\n                    // 'event_callback': callback\n                });\n            };\n            return false;\n        }\n\n        // Attach global listener (capture phase)\n        document.addEventListener(\"submit\", gtag_report_conversion, true);\n\n        // Cleanup on unmount\n        return () => {\n            document.removeEventListener(\"submit\", gtag_report_conversion, true);\n        };\n    }, []);\n    \n    return (\n        <>\n            {/* Newsletter  TODO: make a component*/}\n            <h2 className={`text-center mb-8`} >Newsletter</h2>\n            <p className=\"max-w-2xl text-center mx-auto mb-4 text-xl\">Join our newsletter and unlock a free <b>6-pack of Lightroom presets</b> designed to make your photos stand out.</p>\n            <div className=\"text-center ml-embedded pb-12 lg:pb-32 min-h-[236px] lg:min-h-[316px]\" data-form=\"ndBhtT\"></div>\n        </>\n    )\n}\n\nexport default Newsletter","import * as React from \"react\"\nimport type { PageProps } from \"gatsby\"\n\nimport Layout from \"../components/layout/layout\";\nimport Hero from \"../components/hero-product/hero\";\nimport Button from \"../design-system/button/button\";\nimport MonthlyCTA from \"../components/monthly-cta/monthly-cta\";\nimport Newsletter from \"../components/newsletter/Newsletter\";\n\n\nconst NewsletterPage: React.FC<PageProps> = ({ data }) => {\n\n  return (\n    <>\n      <Layout>\n        <Hero\n          title='Get your free Lightroom presets'\n          description=\"Transform your shots in one click with these 6 free Lightroom presets. These presets will help you edit faster, create a consistent style, and give every photo a professional.\"\n        />\n\n\n        <div className=\"container-white px-5 pt-12 lg:pt-24 rounded-2xl\">\n          <Newsletter />\n        </div>\n\n        <div className=\"container px-5 pt-12 lg:pt-24 rounded-2xl\">\n\n          {/* Products */}\n          <h2 className=\"text-center mb-4\">Keep exploring</h2>\n          <p className=\"max-w-4xl text-center mx-auto mb-12 text-xl\">Discover our curated collection of Lightroom presets designed for photographers who love moody streets, glowing city lights, and bold, atmospheric edits. Whether youâ€™re shooting urban landscapes, portraits, or night scenes, our presets make it easy to achieve a consistent, professional look in every photo.</p>\n          <div className=\"text-center\">\n            <Button\n              text=\"Browse Presets\"\n              color=\"dark\"\n              link=\"/\"\n              onClick={() => sa_event(\"home\")}\n            />\n          </div>\n        </div>\n\n        <MonthlyCTA />\n        \n      </Layout>\n    </>\n  )\n}\n\nexport default NewsletterPage\n\nexport { Head } from \"../seo/head\"","import React from \"react\";\n\ntype SpanTextProps = {\n    text: string;\n    delay: number;\n};\n\nconst SpanText: React.FC<SpanTextProps> = ({ text, delay = 0.05 }) => {\n    return (\n        <span className=\"animated-letter\">\n            {text.split(\" \").map((word, i) => (\n                <span className=\"word\" key={i}>\n                    {word.split(\"\").map((letter, j) => (\n                        <span className=\"letter\" \n                            key={j}\n                            style={{ animationDelay: `${j * delay}s` }}\n                        >\n                            {letter}\n                        </span>\n                    ))}\n                    <span>&nbsp;</span>\n                </span>\n            ))}\n            {/* {text.split(\"\").map((char, index) => (\n                <span \n                    key={index}\n                    style={{ animationDelay: `${index * delay}s`}}\n                >\n                    {char}\n                </span>\n            ))} */}\n        </span>\n    );\n};\n\n// Usage Example\nexport default SpanText;\n"],"names":["_ref","title","description","image","creator","creatorImg","getImage","Avatar","localFile","childImageSharp","gatsbyImageData","React","className","SpanText","text","delay","href","Slug","onClick","sa_event","GatsbyImage","alt","FirstName","LastName","gtag_report_conversion","url","gtag","console","log","document","addEventListener","removeEventListener","data","Layout","Hero","Newsletter","Button","color","link","MonthlyCTA","split","map","word","i","key","letter","j","style","animationDelay"],"sourceRoot":""}