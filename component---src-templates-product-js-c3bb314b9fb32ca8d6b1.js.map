{"version":3,"file":"component---src-templates-product-js-c3bb314b9fb32ca8d6b1.js","mappings":"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","sources":["webpack://thedarkroomm/./src/components/columns.tsx","webpack://thedarkroomm/./src/components/hero-product/hero.tsx","webpack://thedarkroomm/./src/components/newsletter/Newsletter.tsx","webpack://thedarkroomm/./src/utils/span-text.tsx","webpack://thedarkroomm/./src/components/richTextRenderer/RichTextRenderer.tsx","webpack://thedarkroomm/./src/templates/product.js","webpack://thedarkroomm/./src/content/images/monthly-subscription/monthly-subcription-cover.jpg","webpack://thedarkroomm/./src/components/monthly-cta/monthly-cta.tsx"],"sourcesContent":["import * as React from \"react\"\n\ninterface ColumnsProps {\n  children: React.ReactNode;\n  gap?: string;\n  columns?: string;\n}\n\nconst Columns = ({ children, gap = \"4\", columns = \"2\" }: ColumnsProps) => {\n  const classesTemps = ['grid-cols-2', 'grid-cols-3', 'grid-cols-4', 'gap-16'];\n \n  return (\n    <>\n      <div className={`flex md:grid grid-cols-${columns} w-full container gap-${gap} pb-12 lg:pb-28 flex-col text-center`}>\n        {children}\n      </div>\n    </>\n  );\n}\n\nexport default Columns\n","import * as React from \"react\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport SpanText from \"../../utils/span-text\";\n\n/*\n * Types\n */\ninterface HeroProps {\n  title: string;\n  description?: string;\n  image?: any;\n  creator?: any;\n}\n\n/*\n * Style\n */\n\nconst Hero: React.FC<HeroProps> = ({ title, description, image, creator }) => {\n  let creatorImg = creator ? getImage(creator.Avatar.localFile.childImageSharp.gatsbyImageData) : null;\n\n  return (\n    <div className={`hero container relative flex items-center justify-center flex-col text-center`}>\n      <h1 className={`mt-8 max-w-5xl ${!!description || !!creator ? 'mb-2 lg:mb-4' : 'mb-8 lg:mb-16'}`}>\n        <SpanText\n          text={title}\n          delay={.04}\n        />\n      </h1>\n\n      {!!creator && <div className=\"mb-8 lg:mb-16 flex items-center gap-4\">\n        <a \n          href={`/creator/${creator.Slug}`} \n          className=\"w-max outline-4 hover:outline duration-300 rounded-full overflow-hidden box-border\"\n          onClick={() => sa_event(\"click_creator_profile\")}\n        >\n          <GatsbyImage\n            className=\"hover:scale-110 duration-300 rounded-full\"\n            image={creatorImg}\n            alt={`${creator.FirstName} ${creator.LastName}`}\n          />\n        </a>\n        <h4 className=\"m-0\">created by {creator.FirstName} {creator.LastName}</h4>\n      </div>}\n      \n      {!!description && <p className=\"max-w-4xl text-center mx-auto mb-12 text-xl\">{description}</p>}\n      {!!image && <GatsbyImage \n        className=\"rounded-t-2xl w-full max-h-[700px]\"\n        loading=\"eager\"\n        image={image}\n        alt={title}\n      />}\n    </div>\n  );\n}\n\nexport default Hero\n","import React from \"react\";\n\nconst Newsletter: React.FC = () => {\n    React.useEffect(() => {\n        \n        function gtag_report_conversion(url) {\n            // var callback = function () {\n            //     if (typeof (url) != 'undefined') {\n            //         window.location = url;\n            //     }\n            // };\n            if (typeof gtag !== 'undefined') { \n                console.log('Form filled');\n                \n                gtag('event', 'conversion', {\n                    'send_to': 'AW-17489591823/q0ZICN7k6IsbEI_815NB',\n                    // 'event_callback': callback\n                });\n            };\n            return false;\n        }\n\n        // Attach global listener (capture phase)\n        document.addEventListener(\"submit\", gtag_report_conversion, true);\n\n        // Cleanup on unmount\n        return () => {\n            document.removeEventListener(\"submit\", gtag_report_conversion, true);\n        };\n    }, []);\n    \n    return (\n        <>\n            {/* Newsletter  TODO: make a component*/}\n            <h2 className={`text-center mb-8`} >Newsletter</h2>\n            <p className=\"max-w-2xl text-center mx-auto mb-4 text-xl\">Join our newsletter and unlock a free <b>6-pack of Lightroom presets</b> designed to make your photos stand out.</p>\n            <div className=\"text-center ml-embedded pb-12 lg:pb-32 min-h-[236px] lg:min-h-[316px]\" data-form=\"ndBhtT\"></div>\n        </>\n    )\n}\n\nexport default Newsletter","import React from \"react\";\n\ntype SpanTextProps = {\n    text: string;\n    delay: number;\n};\n\nconst SpanText: React.FC<SpanTextProps> = ({ text, delay = 0.05 }) => {\n    return (\n        <span className=\"animated-letter\">\n            {text.split(\" \").map((word, i) => (\n                <span className=\"word\" key={i}>\n                    {word.split(\"\").map((letter, j) => (\n                        <span className=\"letter\" \n                            key={j}\n                            style={{ animationDelay: `${j * delay}s` }}\n                        >\n                            {letter}\n                        </span>\n                    ))}\n                    <span>&nbsp;</span>\n                </span>\n            ))}\n            {/* {text.split(\"\").map((char, index) => (\n                <span \n                    key={index}\n                    style={{ animationDelay: `${index * delay}s`}}\n                >\n                    {char}\n                </span>\n            ))} */}\n        </span>\n    );\n};\n\n// Usage Example\nexport default SpanText;\n","import React from \"react\";\n\ninterface RichTextChild {\n    text?: string;\n    children?: RichTextChild[];\n}\n\ninterface RichTextBlock {\n    type: \"paragraph\" | \"heading\" | \"list\";\n    level?: number; // for heading\n    format?: \"unordered\" | \"ordered\"; // for list\n    children: RichTextChild[];\n}\n\ninterface RichTextRendererProps {\n    content: RichTextBlock[];\n}\n\nconst RichTextRenderer: React.FC<RichTextRendererProps> = ({ content }) => {\n    const renderChildren = (children: RichTextChild[]): React.ReactNode =>\n        children.map((child, idx) => {\n            if (child.children && child.children.length > 0) {\n                return <React.Fragment key={idx}>{renderChildren(child.children)}</React.Fragment>;\n            }\n            return <React.Fragment key={idx}>{child.text}</React.Fragment>;\n        });\n\n    return (\n        <div>\n            {content.map((block, index) => {\n                switch (block.type) {\n                    case \"paragraph\":\n                        return <p key={index}>{renderChildren(block.children)}</p>;\n\n                    case \"heading\":\n                        switch (block.level) {\n                            case 1:\n                                return <h1 key={index}>{renderChildren(block.children)}</h1>;\n                            case 2:\n                                return <h2 key={index}>{renderChildren(block.children)}</h2>;\n                            case 3:\n                                return <h3 key={index}>{renderChildren(block.children)}</h3>;\n                            default:\n                                return <h4 key={index}>{renderChildren(block.children)}</h4>;\n                        }\n\n                    case \"list\":\n                        if (block.format === \"unordered\") {\n                            return (\n                                <ul key={index}>\n                                    {block.children.map((li, liIndex) => (\n                                        <li key={liIndex}>{renderChildren(li.children ?? [])}</li>\n                                    ))}\n                                </ul>\n                            );\n                        }\n                        if (block.format === \"ordered\") {\n                            return (\n                                <ol key={index}>\n                                    {block.children.map((li, liIndex) => (\n                                        <li key={liIndex}>{renderChildren(li.children ?? [])}</li>\n                                    ))}\n                                </ol>\n                            );\n                        }\n                        return null;\n\n                    default:\n                        return null;\n                }\n            })}\n        </div>\n    );\n};\n\nexport default RichTextRenderer;\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { getImage } from \"gatsby-plugin-image\"\n\nimport Layout from \"../components/layout/layout\";\nimport Hero from \"../components/hero-product/hero\"\nimport Button from \"../design-system/button/button\";\n// import PresetCarousel from '../components/preset-carousel/preset-carousel';\nimport MonthlyCTA from \"../components/monthly-cta/monthly-cta\";\nimport Newsletter from \"../components/newsletter/Newsletter\";\nimport RichTextRenderer from \"../components/richTextRenderer/RichTextRenderer\"\n\nconst ProductPostTemplate = ({ data }) => {\n  const { strapiProduct } = data // data.markdownRemark holds your post data\n\n  let heroImg = getImage(strapiProduct.heroImage.localFile.childrenImageSharp[0].gatsbyImageData);\n    \n  return (\n    <Layout>\n      <div>\n        <Hero\n          title={strapiProduct.Title}\n          image={heroImg}\n          creator={strapiProduct.creator}\n        />\n\n        <div className=\"container-white rounded-b-2xl\">\n\n          {/* Section Video */}\n          {/* {!!frontmatter.video && (\n            <div className=\"container-content flex w-full container flex-col md:flex-row items-center\">\n              <div className=\"relative flex-1 w-full p-5 pb-12 lg:p-8 text-center\">\n                <h2>{frontmatter?.videoHeading}</h2>\n                <Button\n                  text=\"Buy now\"\n                  color=\"dark\"\n                  link={frontmatter.productLink}\n                  target=\"_blank\"\n                // onClick={() => sa_event(\"click_product\")}\n                />\n              </div>\n\n              <div className=\"relative flex flex-col justify-center flex-1 w-full min-w-[50%] aspect-square overflow-hidden\" controls>\n                <video className=\"w-full\" autoPlay muted loop>\n                  <source src={`${frontmatter.video}`} type=\"video/mp4\"></source>\n                </video>\n              </div>\n            </div>\n          )} */}\n\n          {/* Preset discovery section */}\n          {/* {frontmatter.presetCarousel && <PresetCarousel images={frontmatter.presetCarousel} />} */}\n\n          <section\n            className=\"container-content px-5 py-12 lg:py-16 mx-auto text-center max-w-4xl\"\n          >\n            {strapiProduct.richText && <RichTextRenderer content={strapiProduct.richText} />}\n            <Button\n              text=\"Buy now\"\n              color=\"dark\"\n              link={strapiProduct.productLink}\n              target=\"_blank\"\n            // onClick={() => sa_event(\"buy_now\")}\n            />\n          </section>\n        </div>\n\n        <MonthlyCTA />\n        \n        <div className=\"container-white px-5 pt-12 lg:pt-24 rounded-2xl\">\n          {/* Newsletter  */}\n          <section className=\"px-5\">\n            <Newsletter />\n          </section>\n        </div>\n\n      </div>\n    </Layout>\n  )\n}\n\nexport default ProductPostTemplate;\n\nexport { Head } from \"../seo/head\"\n\nexport const pageQuery = graphql`\n  query GetProduct($slug: String!) {\n    strapiProduct(Slug: { eq: $slug }) {\n      Slug\n      Title\n      productLink\n      richText{\n        type\n        level\n        format\n        children {\n          text\n          children {\n            text\n          }\n        }\n      }\n      creator {\n        Avatar {\n          localFile {\n            childImageSharp {\n              gatsbyImageData(width: 75, height: 75, layout: FIXED)\n            }\n          }\n        }\n        FirstName\n        LastName\n        Slug\n      }\n      heroImage {\n        localFile {\n          childrenImageSharp {\n            gatsbyImageData(width: 1640)\n          }\n        }\n      }\n      featuredImage {\n        localFile {\n          childrenImageSharp {\n            gatsbyImageData(width: 1640)\n          }\n        }\n      }\n    }\n  }\n`","export default __webpack_public_path__ + \"static/monthly-subcription-cover-ba138bee2a79c6122793ba3b1873bc74.jpg\";","import React from \"react\"\nimport Columns from \"../columns\";\nimport Button from \"../../design-system/button/button\";\nimport MonthlySubscriptionImg from '../../content/images/monthly-subscription/monthly-subcription-cover.jpg';\n\nconst MonthlyCTA: React.FC = () => {\n\n  return (\n    <>\n      {/* Membership CTA */ }\n      <section className = \"container-black px-5 pt-12 lg:pt-28\" >\n        <Columns columns=\"2\" gap=\"16\">\n          <div>\n            <img className=\"object-cover rounded-2xl w-full max-h-[700px]\" height={2000} width={3000} src={MonthlySubscriptionImg} alt=\"Concon Dunes\" loading=\"eager\" />\n          </div>\n          <div className=\"text-left flex flex-col justify-center\">\n            <h2 className=\"mb-4\">Elevate your edits every month.</h2>\n            <p className=\"mb-4 text-xl\">Get fresh, professionally crafted Lightroom presets delivered monthly to keep your photo style evolving. Perfect for photographers and creators who love staying inspired.</p>\n            <div>\n              <Button\n                text=\"Subscribe now\"\n                color=\"dark\"\n                link=\"https://thedarkroomm.gumroad.com/l/monthly-lightroom-presets\"\n                target=\"_blank\"\n                onClick={() => sa_event(\"buy_monthly_subscription\")}\n              />\n            </div>\n          </div>\n        </Columns>\n      </section>\n    </>\n  );\n}\n\nexport default MonthlyCTA\n"],"names":["_ref","children","gap","columns","React","className","title","description","image","creator","creatorImg","getImage","Avatar","localFile","childImageSharp","gatsbyImageData","SpanText","text","delay","href","Slug","onClick","sa_event","GatsbyImage","alt","FirstName","LastName","loading","gtag_report_conversion","url","gtag","console","log","document","addEventListener","removeEventListener","split","map","word","i","key","letter","j","style","animationDelay","content","renderChildren","child","idx","length","block","index","type","level","format","li","liIndex","data","strapiProduct","heroImg","heroImage","childrenImageSharp","Title","richText","color","link","productLink","target","Newsletter","Columns","height","width","src","MonthlySubscriptionImg","Button"],"sourceRoot":""}