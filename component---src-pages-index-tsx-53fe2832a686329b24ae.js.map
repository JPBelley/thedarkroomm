{"version":3,"file":"component---src-pages-index-tsx-53fe2832a686329b24ae.js","mappings":"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","sources":["webpack://thedarkroomm/./src/design-system/button/button.tsx","webpack://thedarkroomm/./src/utils/span-text.tsx","webpack://thedarkroomm/./src/content/images/product-0/website-cover.jpg","webpack://thedarkroomm/./src/components/hero/hero.tsx","webpack://thedarkroomm/./src/content/images/monthly-subscription/monthly-subcription-cover.jpg","webpack://thedarkroomm/./src/components/monthly-cta/monthly-cta.tsx","webpack://thedarkroomm/./src/pages/index.tsx","webpack://thedarkroomm/./src/components/column.tsx"],"sourcesContent":["import * as React from \"react\"\n\ninterface ButtonType {\n    text: string;\n    color?: string;\n    link?: string;\n    target?: string;\n}\n\nconst Button: React.FC<ButtonType> = ({ text, color = \"light\", link, target = \"_self\"}) => {\n    const Tag = !link ? \"button\" : \"a\";\n\n    return (\n        <Tag \n            className={`button text-base border-2 px-8 py-2 font-bold uppercase rounded-sm button-${color}`}\n            href={link}\n            target={target}\n        >\n            {text}\n        </Tag>\n    )\n}\n\nexport default Button\n","import React from \"react\";\n\ntype SpanTextProps = {\n    text: string;\n    delay: number;\n};\n\nconst SpanText: React.FC<SpanTextProps> = ({ text, delay = 0.05 }) => {\n    return (\n        <span className=\"animated-letter\">\n            {text.split(\" \").map((word, i) => (\n                <span className=\"word\" key={i}>\n                    {word.split(\"\").map((letter, j) => (\n                        <span className=\"letter\" \n                            key={j}\n                            style={{ animationDelay: `${j * delay}s` }}\n                        >\n                            {letter}\n                        </span>\n                    ))}\n                    <span>&nbsp;</span>\n                </span>\n            ))}\n            {/* {text.split(\"\").map((char, index) => (\n                <span \n                    key={index}\n                    style={{ animationDelay: `${index * delay}s`}}\n                >\n                    {char}\n                </span>\n            ))} */}\n        </span>\n    );\n};\n\n// Usage Example\nexport default SpanText;\n","export default __webpack_public_path__ + \"static/website-cover-592699554e93835cb771cd7c92e6685a.jpg\";","import React, { useEffect, useState } from \"react\"\n\nimport ConconDune from '../../content/images/product-0/website-cover.jpg';\nimport SpanText from \"../../utils/span-text\";\n\n/*\n * Types\n */\ninterface HeroProps {\n  title: string;\n}\n\n/*\n * Style\n */\n\nconst Hero: React.FC<HeroProps> = ({title}) => {\n  // const [fontsLoaded, setFontsLoaded] = useState(false);\n\n  // useEffect(() => {\n  //   document.fonts.ready.then(() => {\n  //     setFontsLoaded(true);\n  //   });\n  // }, []);\n\n  return (\n    <div className={`hero container relative flex items-center justify-center flex-col text-center`}>\n      <h1 className=\"mt-2 mb-4\">\n        <SpanText \n          text={title}\n          delay={.04}\n        />\n        {/* {title} */}\n      </h1>\n      {/* <p className=\"mb-16 text-2xl\">Designed to help you create with purpose.</p> */}\n\n      <img className=\"object-cover rounded-t-2xl w-full max-h-[700px]\" height={2000} width={3000} src={ConconDune} alt=\"Lanscape preset\" loading=\"eager\"/>\n    </div>\n  );\n}\n\nexport default Hero\n","export default __webpack_public_path__ + \"static/monthly-subcription-cover-ba138bee2a79c6122793ba3b1873bc74.jpg\";","import React from \"react\"\nimport Columns from \"../columns\";\nimport Button from \"../../design-system/button/button\";\nimport MonthlySubscriptionImg from '../../content/images/monthly-subscription/monthly-subcription-cover.jpg';\n\nconst MonthlyCTA: React.FC = () => {\n\n  return (\n    <>\n    {/* Membership CTA */ }\n    <section className = \"container-black px-5 pt-12 lg:pt-28\" >\n      <Columns columns=\"2\" gap=\"16\">\n        <div>\n          <img className=\"object-cover rounded-2xl w-full max-h-[700px]\" height={2000} width={3000} src={MonthlySubscriptionImg} alt=\"Concon Dunes\" loading=\"eager\" />\n        </div>\n        <div className=\"text-left flex flex-col justify-center\">\n          <h2 className=\"mb-4\">Elevate your edits every month.</h2>\n          <p className=\"mb-4 text-xl\">Get fresh, professionally crafted Lightroom presets delivered monthly to keep your photo style evolving. Perfect for photographers and creators who love staying inspired.</p>\n          <div>\n            <Button\n              text=\"Subscribe now\"\n              color=\"dark\"\n              link=\"https://thedarkroomm.gumroad.com/l/monthly-lightroom-presets\"\n              target=\"_blank\"\n              onClick={() => sa_event(\"buy_monthly_subscription\")}\n            />\n          </div>\n        </div>\n      </Columns>\n      </section>\n    </>\n  );\n}\n\nexport default MonthlyCTA\n","import * as React from \"react\"\nimport type { PageProps } from \"gatsby\"\nimport { graphql } from \"gatsby\"\n// import useInView from \"../utils/use-in-view\";\n\nimport Layout from \"../components/layout/layout\";\nimport Hero from \"../components/hero/hero\";\nimport Columns from \"../components/columns\";\nimport Column from \"../components/column\";\nimport MonthlyCTA from \"../components/monthly-cta/monthly-cta\";\n\n// Import Swiper styles\nimport 'swiper/css';\nimport '../styles/index.scss';\nimport Newsletter from \"../components/newsletter/Newsletter\";\n\nconst IndexPage: React.FC<PageProps> = ({ data }) => {\n  const { allMarkdownRemark: {edges} } = data \n  // const [ref, isVisible] = useInView();\n\n  return (\n    <>\n      <Layout>\n        {/* Hero */}\n        <Hero\n          title=\"The Darkroomm\"\n        />\n\n        <div className=\"container-white px-5 pt-12 lg:pt-24 rounded-b-2xl\">\n\n          <Newsletter />\n\n        </div>\n\n        <MonthlyCTA />\n        \n        <div className=\"container-white px-5 pt-12 lg:pt-24 rounded-2xl\">\n\n          {/* Products */}\n          <h2 className=\"text-center mb-4\">Products</h2>\n          <p className=\"max-w-4xl text-center mx-auto mb-12 text-xl\">Whether you're a beginner or a pro, our presets are designed to enhance your photos with beautiful tones and a unique styleâ€”helping you achieve the look you love with just few clicks.</p>\n          <Columns columns=\"3\">\n            {edges.map((column: any, i: number) => {\n              const { published, slug, featuredImage } = column.node?.frontmatter;\n\n              return (\n                published && <Column key={i} image={featuredImage} href={`/product/${slug}`} itemId={slug}/>\n              )\n            })}\n          </Columns>\n\n        </div>\n\n      </Layout>\n    </>\n  )\n}\n\nexport default IndexPage\n\nexport { Head } from \"../seo/head\"\n\nexport const pageQuery = graphql`\n  query Products {\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            published\n            slug\n            title\n            etsyLink\n            featuredImage {\n              childImageSharp {\n                gatsbyImageData(width: 600)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;","import * as React from \"react\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport type { Image } from \"../project-types\";\n\n/*\n * Types\n */\ninterface ColumnProps {\n  image: Image;\n  href: string;\n  itemId: number;\n}\n\n/*\n * Style\n */\n\nconst Column: React.FC<ColumnProps> = (props) => {\n  const { image, href, itemId } = props\n  let featuredImg = getImage(image?.childImageSharp?.gatsbyImageData)\n  \n  return (\n    <a\n      href={href} \n      className={`column relative flex-1 w-full min-w-[30%] rounded overflow-hidden`}\n      onClick={() =>{\n        sa_event(`click_product`);\n        sa_event(`click_product ${itemId}}`);\n      }}\n    >\n      <GatsbyImage image={featuredImg} alt={''} />\n    </a>\n  );\n}\n\nexport default Column\n"],"names":["_ref","text","color","link","target","Tag","React","className","href","delay","split","map","word","i","key","letter","j","style","animationDelay","title","SpanText","height","width","src","ConconDune","alt","loading","Columns","columns","gap","MonthlySubscriptionImg","Button","onClick","sa_event","data","allMarkdownRemark","edges","Layout","Hero","Newsletter","MonthlyCTA","column","published","slug","featuredImage","node","_column$node","frontmatter","Column","image","itemId","props","featuredImg","getImage","childImageSharp","_image$childImageShar","gatsbyImageData","GatsbyImage"],"sourceRoot":""}