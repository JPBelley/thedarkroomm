{"version":3,"file":"component---src-pages-products-tsx-f20846e0426853a465dc.js","mappings":"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","sources":["webpack://thedarkroomm/./src/components/columns.tsx","webpack://thedarkroomm/./src/components/hero-product/hero.tsx","webpack://thedarkroomm/./src/components/card/card.tsx","webpack://thedarkroomm/./src/components/newsletter/Newsletter.tsx","webpack://thedarkroomm/./src/utils/span-text.tsx","webpack://thedarkroomm/./src/pages/products.tsx","webpack://thedarkroomm/./src/content/images/monthly-subscription/monthly-subcription-cover.jpg","webpack://thedarkroomm/./src/components/monthly-cta/monthly-cta.tsx"],"sourcesContent":["import * as React from \"react\"\n\ninterface ColumnsProps {\n  children: React.ReactNode;\n  gap?: string;\n  columns?: string;\n}\n\nconst Columns = ({ children, gap = \"4\", columns = \"2\" }: ColumnsProps) => {\n  const classesTemps = ['grid-cols-2', 'grid-cols-3', 'grid-cols-4', 'gap-16'];\n \n  return (\n    <>\n      <div className={`flex md:grid grid-cols-${columns} w-full container gap-${gap} pb-12 lg:pb-28 flex-col text-center`}>\n        {children}\n      </div>\n    </>\n  );\n}\n\nexport default Columns\n","import * as React from \"react\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport SpanText from \"../../utils/span-text\";\n\n/*\n * Types\n */\ninterface HeroProps {\n  title: string;\n  description?: string;\n  image?: any;\n  creator?: any;\n}\n\n/*\n * Style\n */\n\nconst Hero: React.FC<HeroProps> = ({ title, description, image, creator }) => {\n  let creatorImg = creator ? getImage(creator.Avatar.localFile.childImageSharp.gatsbyImageData) : null;\n\n  return (\n    <div className={`hero container relative flex items-center justify-center flex-col text-center`}>\n      <h1 className={`mt-8 max-w-5xl ${!!description || !!creator ? 'mb-2 lg:mb-4' : 'mb-8 lg:mb-16'}`}>\n        <SpanText\n          text={title}\n          delay={.04}\n        />\n      </h1>\n\n      {!!creator && <div className=\"mb-8 lg:mb-16 flex items-center gap-4\">\n        <a \n          href={`/creator/${creator.Slug}`} \n          className=\"w-max outline-4 hover:outline duration-300 rounded-full overflow-hidden box-border\"\n          onClick={() => sa_event(\"click_creator_profile\")}\n        >\n          <GatsbyImage\n            className=\"hover:scale-110 duration-300 rounded-full\"\n            image={creatorImg}\n            alt={`${creator.FirstName} ${creator.LastName}`}\n          />\n        </a>\n        <h4 className=\"m-0 text-left flex flex-col gap-1\">created by\n          <span className=\"block\">{creator.FirstName} {creator.LastName}</span>\n        </h4>\n      </div>}\n      \n      {!!description && <p className=\"max-w-4xl text-center mx-auto mb-12 text-xl\">{description}</p>}\n      {!!image && <GatsbyImage \n        className=\"rounded-t-2xl w-full max-h-[700px]\"\n        loading=\"eager\"\n        image={image}\n        alt={title}\n      />}\n    </div>\n  );\n}\n\nexport default Hero\n","import * as React from \"react\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport type { Image } from \"../../project-types\";\n\n/*\n * Types\n */\ninterface CardProps {\n  image: Image;\n  href: string;\n  title: string;\n  itemId: number;\n  category?: string;\n  card: any;\n  size?: \"small\" | \"medium\" | \"large\";\n}\n\n/*\n * Style\n */\n\nconst Card: React.FC<CardProps> = (props) => {\n  const { image, href, itemId, category, title, size = \"medium\" } = props;\n  let featuredImg = getImage(image?.localFile.childImageSharp.gatsbyImageData)\n\n  return (\n    <a\n      href={href} \n      className={`card relative flex-1 w-full min-w-[30%] rounded overflow-hidden flex justify-center items-center ${size}`}\n      onClick={() =>{\n        sa_event(`click_product`);\n        sa_event(`click_product ${itemId}}`);\n      }}\n    >\n      <div className=\"overlay\"></div>\n      <div className={`card-info absolute z-10 text-white uppercase flex flex-col items-center tracking-tight`}>\n        {category && <h3 \n          className=\"category m-0\"\n          >\n            {category}\n          </h3>\n        }\n        <p className=\"card-title font-bold relative\">{title}</p>\n      </div>\n      <GatsbyImage image={featuredImg} alt={''} />\n    </a>\n  );\n}\n\nexport default Card\n","import React from \"react\";\n\nconst Newsletter: React.FC = () => {\n    React.useEffect(() => {\n        \n        function gtag_report_conversion(url) {\n            // var callback = function () {\n            //     if (typeof (url) != 'undefined') {\n            //         window.location = url;\n            //     }\n            // };\n            if (typeof gtag !== 'undefined') { \n                console.log('Form filled');\n                \n                gtag('event', 'conversion', {\n                    'send_to': 'AW-17489591823/q0ZICN7k6IsbEI_815NB',\n                    // 'event_callback': callback\n                });\n            };\n            return false;\n        }\n\n        // Attach global listener (capture phase)\n        document.addEventListener(\"submit\", gtag_report_conversion, true);\n\n        // Cleanup on unmount\n        return () => {\n            document.removeEventListener(\"submit\", gtag_report_conversion, true);\n        };\n    }, []);\n    \n    return (\n        <>\n            {/* Newsletter  TODO: make a component*/}\n            <h2 className={`text-center mb-8`} >Newsletter</h2>\n            <p className=\"max-w-2xl text-center mx-auto mb-4 text-xl\">Join our newsletter and unlock a free <b>6-pack of Lightroom presets</b> designed to make your photos stand out.</p>\n            <div className=\"text-center ml-embedded pb-12 lg:pb-32 min-h-[236px] lg:min-h-[316px]\" data-form=\"ndBhtT\"></div>\n        </>\n    )\n}\n\nexport default Newsletter","import React from \"react\";\n\ntype SpanTextProps = {\n    text: string;\n    delay: number;\n};\n\nconst SpanText: React.FC<SpanTextProps> = ({ text, delay = 0.05 }) => {\n    return (\n        <span className=\"animated-letter\">\n            {text.split(\" \").map((word, i) => (\n                <span className=\"word\" key={i}>\n                    {word.split(\"\").map((letter, j) => (\n                        <span className=\"letter\" \n                            key={j}\n                            style={{ animationDelay: `${j * delay}s` }}\n                        >\n                            {letter}\n                        </span>\n                    ))}\n                    <span>&nbsp;</span>\n                </span>\n            ))}\n            {/* {text.split(\"\").map((char, index) => (\n                <span \n                    key={index}\n                    style={{ animationDelay: `${index * delay}s`}}\n                >\n                    {char}\n                </span>\n            ))} */}\n        </span>\n    );\n};\n\n// Usage Example\nexport default SpanText;\n","import * as React from \"react\"\nimport type { PageProps } from \"gatsby\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout/layout\";\nimport Hero from \"../components/hero-product/hero\";\nimport Columns from \"../components/columns\";\nimport Card from \"../components/card/card\";\nimport MonthlyCTA from \"../components/monthly-cta/monthly-cta\";\n\nimport Newsletter from \"../components/newsletter/Newsletter\";\n\nconst IndexPage: React.FC<PageProps> = ({ data }) => {\n  const { allStrapiProduct: { nodes } } = data;\n\n  return (\n    <>\n      <Layout>\n        <Hero\n          title='Products'\n          description=\"Whether you're a beginner or a pro, our presets are designed to enhance your photos with beautiful tones and a unique style—helping you achieve the look you love with just few clicks.\"\n        />\n        <div className=\"container-white px-5 pt-12 lg:pt-24 rounded-2xl\">\n          <Columns columns=\"4\">\n            {nodes.map((column: any, i: number) => {\n              const { featuredImage, Slug, Title, category } = column;\n\n              return (\n                <Card\n                  key={i}\n                  card={column}\n                  image={featuredImage}\n                  href={`/product/${Slug}`}\n                  itemId={''}\n                  size=\"small\"\n                  category={category?.name}\n                  title={Title}\n                />\n              )\n            })}\n          </Columns>\n\n        </div>\n\n        <MonthlyCTA />\n        \n        <div className=\"container-white px-5 pt-12 lg:pt-24 rounded-2xl\">\n          <Newsletter />\n        </div>\n      </Layout>\n    </>\n  )\n}\n\nexport default IndexPage\n\nexport { Head } from \"../seo/head\"\n\nexport const pageQuery = graphql`\n  query Products {\n    allStrapiProduct(\n        sort: {createdAt: DESC}\n      ) {\n      nodes {\n        Slug\n        Title\n        productLink\n        category {\n          name\n        }\n        featuredImage {\n          localFile {\n            childImageSharp {\n              gatsbyImageData(width: 600)\n            }\n          }\n        }\n      }\n    }\n  }\n`;","export default __webpack_public_path__ + \"static/monthly-subcription-cover-ba138bee2a79c6122793ba3b1873bc74.jpg\";","import React from \"react\"\nimport Columns from \"../columns\";\nimport Button from \"../../design-system/button/button\";\nimport MonthlySubscriptionImg from '../../content/images/monthly-subscription/monthly-subcription-cover.jpg';\n\nconst MonthlyCTA: React.FC = () => {\n\n  return (\n    <>\n      {/* Membership CTA */ }\n      <section className = \"container-black px-5 pt-12 lg:pt-28\" >\n        <Columns columns=\"2\" gap=\"16\">\n          <div>\n            <img className=\"object-cover rounded-2xl w-full max-h-[700px]\" height={2000} width={3000} src={MonthlySubscriptionImg} alt=\"Concon Dunes\" loading=\"eager\" />\n          </div>\n          <div className=\"text-left flex flex-col justify-center\">\n            <h2 className=\"mb-4\">Elevate your edits every month.</h2>\n            <p className=\"mb-4 text-xl\">Get fresh, professionally crafted Lightroom presets delivered monthly to keep your photo style evolving. Perfect for photographers and creators who love staying inspired.</p>\n            <div>\n              <Button\n                text=\"Subscribe now\"\n                color=\"dark\"\n                link=\"https://thedarkroomm.gumroad.com/l/monthly-lightroom-presets\"\n                target=\"_blank\"\n                onClick={() => sa_event(\"buy_monthly_subscription\")}\n              />\n            </div>\n          </div>\n        </Columns>\n      </section>\n    </>\n  );\n}\n\nexport default MonthlyCTA\n"],"names":["_ref","children","gap","columns","React","className","title","description","image","creator","creatorImg","getImage","Avatar","localFile","childImageSharp","gatsbyImageData","SpanText","text","delay","href","Slug","onClick","sa_event","GatsbyImage","alt","FirstName","LastName","loading","props","itemId","category","size","featuredImg","gtag_report_conversion","url","gtag","console","log","document","addEventListener","removeEventListener","split","map","word","i","key","letter","j","style","animationDelay","data","allStrapiProduct","nodes","Layout","Hero","Columns","column","featuredImage","Title","Card","card","name","MonthlyCTA","Newsletter","height","width","src","MonthlySubscriptionImg","Button","color","link","target"],"sourceRoot":""}