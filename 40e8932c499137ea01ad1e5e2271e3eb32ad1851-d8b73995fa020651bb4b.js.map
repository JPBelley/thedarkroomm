{"version":3,"file":"40e8932c499137ea01ad1e5e2271e3eb32ad1851-d8b73995fa020651bb4b.js","mappings":"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","sources":["webpack://thedarkroomm/./src/components/columns.tsx","webpack://thedarkroomm/./node_modules/core-js/internals/create-property.js","webpack://thedarkroomm/./node_modules/core-js/internals/engine-webkit-version.js","webpack://thedarkroomm/./node_modules/core-js/internals/array-method-is-strict.js","webpack://thedarkroomm/../src/image-utils.ts","webpack://thedarkroomm/../src/components/hooks.ts","webpack://thedarkroomm/../src/components/layout-wrapper.tsx","webpack://thedarkroomm/../src/components/picture.tsx","webpack://thedarkroomm/../src/components/placeholder.tsx","webpack://thedarkroomm/../src/components/main-image.tsx","webpack://thedarkroomm/../src/components/gatsby-image.server.tsx","webpack://thedarkroomm/../src/components/gatsby-image.browser.tsx","webpack://thedarkroomm/../src/components/static-image.server.tsx","webpack://thedarkroomm/../src/components/static-image.tsx","webpack://thedarkroomm/./node_modules/camelcase/index.js","webpack://thedarkroomm/./src/seo/head.tsx","webpack://thedarkroomm/./node_modules/core-js/internals/classof.js","webpack://thedarkroomm/./node_modules/core-js/internals/to-string-tag-support.js","webpack://thedarkroomm/./src/components/footer/footer.tsx","webpack://thedarkroomm/./src/components/svg/Logo.tsx","webpack://thedarkroomm/./src/components/nav/nav.tsx","webpack://thedarkroomm/./src/components/layout/layout.tsx","webpack://thedarkroomm/./node_modules/core-js/internals/engine-ff-version.js","webpack://thedarkroomm/./src/design-system/button/button.tsx","webpack://thedarkroomm/./src/components/newsletter/Newsletter.tsx","webpack://thedarkroomm/./node_modules/core-js/internals/delete-property-or-throw.js","webpack://thedarkroomm/./node_modules/core-js/modules/es.array.sort.js","webpack://thedarkroomm/./src/utils/span-text.tsx","webpack://thedarkroomm/./node_modules/core-js/internals/to-string.js","webpack://thedarkroomm/./node_modules/core-js/internals/array-slice-simple.js","webpack://thedarkroomm/./node_modules/core-js/internals/engine-is-ie-or-edge.js","webpack://thedarkroomm/./src/content/images/monthly-subscription/monthly-subcription-cover.jpg","webpack://thedarkroomm/./src/components/monthly-cta/monthly-cta.tsx","webpack://thedarkroomm/./node_modules/core-js/internals/array-sort.js"],"sourcesContent":["import * as React from \"react\"\n\ninterface ColumnsProps {\n  children: React.ReactNode;\n  gap?: string;\n  columns?: string;\n}\n\nconst Columns = ({ children, gap = \"4\", columns = \"2\" }: ColumnsProps) => {\n  const classesTemps = ['grid-cols-2', 'grid-cols-3', 'gap-16'];\n \n  return (\n    <>\n      <div className={`flex md:grid grid-cols-${columns} w-full container gap-${gap} pb-12 lg:pb-28 flex-col text-center`}>\n        {children}\n      </div>\n    </>\n  );\n}\n\nexport default Columns\n","'use strict';\nvar toPropertyKey = require('../internals/to-property-key');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPropertyKey(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","'use strict';\nvar userAgent = require('../internals/engine-user-agent');\n\nvar webkit = userAgent.match(/AppleWebKit\\/(\\d+)\\./);\n\nmodule.exports = !!webkit && +webkit[1];\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call -- required for testing\n    method.call(null, argument || function () { return 1; }, 1);\n  });\n};\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import * as React from \"react\"\nimport type { HeadFC } from \"gatsby\"\nimport { Script } from \"gatsby\"\n\nexport const Head: HeadFC = ({ location, params, data, pageContext }) => {\n    \n    return (\n        <>\n            <title>The Darkroomm</title>\n            {/* <!-- Osano --> */}\n            <Script id=\"osano\" src=\"https://cmp.osano.com/ftVjNLUHak/f8da4df3-417c-42d9-b198-aa8def05e038/osano.js\"></Script>\n            {/* <!-- MailerLite Universal --> */}\n            <Script strategy=\"post-hydrate\">\n                {`\n                    (function(w,d,e,u,f,l,n){w[f] = w[f] || function () {\n                    (w[f].q = w[f].q || [])\n                    .push(arguments);\n                    }, l = d.createElement(e), l.async = 1, l.src = u,\n                    n = d.getElementsByTagName(e)[0], n.parentNode.insertBefore(l, n);})\n                    (window,document,'script','https://assets.mailerlite.com/js/universal.js','ml');\n                    ml('account', '1253538');\n                `}\n            </Script>\n            {/* <!-- End MailerLite Universal --> */}\n\n            {/* <!-- Events Simply analitycs --> */}\n            <Script>\n                {`window.sa_event=window.sa_event||function(){var a=[].slice.call(arguments);window.sa_event.q?window.sa_event.q.push(a):window.sa_event.q=[a]};`}\n            </Script>\n            {/* <!-- Events Simply analitycs --> */}\n        </>\n    )\n}","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar isCallable = require('../internals/is-callable');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar $Object = Object;\n\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) === 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) === 'Object' && isCallable(O.callee) ? 'Arguments' : result;\n};\n","'use strict';\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","import * as React from \"react\"\n\nconst Footer: React.FC = () => {\n\n    return (\n        <footer className=\"flex w-full px-5 py-6 flex-col items-center justify-center\">\n            © {new Date().getFullYear()} The Darkroomm. All rights reserved.\n        </footer>\n    );\n}\n\nexport default Footer\n","import React from \"react\";\n\ntype LogoProps = {\n    fillColor?: string;\n    width?: string;\n    height?: string;\n};\n\n\nconst Logo = ({ fillColor = 'currentColor', width = '100', height= '100' }: LogoProps) => {\n    return (\n        <svg id=\"logo\" width={`${width}`} height={`${height}`} viewBox=\"0 0 334 334\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <rect width=\"334\" height=\"334\" rx=\"32\" fill=\"none\" />\n            <circle cx=\"167\" cy=\"167\" r=\"160\" stroke={fillColor} strokeWidth=\"14\" />\n            <circle cx=\"167.5\" cy=\"166.5\" r=\"58.5\" stroke={fillColor} strokeWidth=\"8\" />\n            <path id=\"logo-path-1\" d=\"M226.5 123.501L131.729 28.2747C185 15.0014 224.972 36.5538 224.972 36.5538L226.5 123.501Z\" fill={fillColor} />\n            <path id=\"logo-path-2\" d=\"M238.727 179.05L240 44.5015C285.5 71.5 300.154 116.914 300.154 116.914L238.727 179.05Z\" fill={fillColor} />\n            <path id=\"logo-path-3\" d=\"M209.443 227.464L304.744 132.093C319 185 296 226.001 296 226.001L209.443 227.464Z\" fill={fillColor} />\n            <path id=\"logo-path-4\" d=\"M154.641 238.46L290.5 237C263.5 284.5 219 299 219 299L154.641 238.46Z\" fill={fillColor} />\n            <path id=\"logo-path-5\" d=\"M105.818 209.202L203.237 304.211C150 318.5 108.38 296.708 108.38 296.708L105.818 209.202Z\" fill={fillColor} />\n            <path id=\"logo-path-6\" d=\"M93.2435 153.989L95.0004 290C47.5 262 33.5001 217.5 33.5001 217.5L93.2435 153.989Z\" fill={fillColor} />\n            <path id=\"logo-path-7\" d=\"M122.608 106.18L28.6541 202.853C14.5 150 35.9073 109.28 35.9073 109.28L122.608 106.18Z\" fill={fillColor} />\n            <path id=\"logo-path-8\" d=\"M179.036 93.8971L44.5001 93.0006C73 46 116.5 33.0008 116.5 33.0008L179.036 93.8971Z\" fill={fillColor} />\n        </svg>\n    );\n}\n\nexport default Logo;","import * as React from \"react\"\nimport Logo from \"../svg/Logo\";\n\nconst Nav: React.FC = () => {\n    const [show, setShow] = React.useState(true);\n    const [lastScrollY, setLastScrollY] = React.useState(0);\n    \n    React.useEffect(() => {\n        const handleScroll = () => {\n            const currentScrollY = window.scrollY;\n\n            if (currentScrollY > lastScrollY) {\n                setTimeout(() => setShow(false), 300); // scrolling down\n            } else {\n                setTimeout(() => setShow(true), 300);  // scrolling up\n            }\n\n            setLastScrollY(currentScrollY);\n        };\n\n        window.addEventListener('scroll', handleScroll);\n\n        return () => window.removeEventListener('scroll', handleScroll);\n    }, [lastScrollY]);\n\n    return (\n        <div className={`container sticky top-4 flex px-5 z-10 transition-transform duration-500 ${show ? 'translate-y-0' : '-translate-y-60'}`}>\n            <nav className=\"flex mx-auto bg-soft-black items-center justify-between border rounded-md overflow-hidden \">\n                <a \n                    className=\"flex items-center h-14 bg-black px-3 uppercase hover:bg-soft-black transition-colors duration-200 rounded-md overflow-hidden\" href=\"/\"\n                    onClick={() => sa_event(\"menu_home\")}\n                >\n                    <Logo  width=\"40\" height=\"60\"/>\n                </a>\n                <div className=\"flex justify-end\">\n                    <a \n                        className=\"flex items-center h-14 px-6 uppercase hover:bg-black transition-colors duration-200 rounded-md\" href=\"/products\"\n                        onClick={() => sa_event(\"menu_product\")}\n                    >\n                        Products\n                    </a>\n                    <a \n                        className=\"flex items-center h-14 px-6 uppercase hover:bg-black transition-colors duration-200 rounded-md\" href=\"https://thedarkroomm.gumroad.com/l/monthly-lightroom-presets\" \n                        target=\"_blank\"\n                        onClick={() => sa_event(\"menu_subscribe\")}\n                    >\n                        Subscribe\n                    </a>\n                </div>\n            </nav>\n        </div>\n    );\n}\n\nexport default Nav\n","import React from \"react\";\nimport Footer from \"../footer/footer\"\nimport Nav from \"../nav/nav\";\nimport '../../styles/index.scss';\n\ntype LayoutProps = {\n    children: React.ReactNode;\n};\n\nconst Layout = ({ children }: LayoutProps) => {\n    return (\n        <>\n            <Nav />\n            <main className=\"pt-5\">\n                {children}\n            </main>\n            <Footer />\n            {/* <!-- 100% privacy-first analytics | Simple analytics --> */ }\n            <script async src=\"https://scripts.simpleanalyticscdn.com/latest.js\"></script>\n        </>\n    )\n}\n\nexport default Layout","'use strict';\nvar userAgent = require('../internals/engine-user-agent');\n\nvar firefox = userAgent.match(/firefox\\/(\\d+)/i);\n\nmodule.exports = !!firefox && +firefox[1];\n","import * as React from \"react\"\n\ninterface ButtonType {\n    text: string;\n    color?: string;\n    link?: string;\n    target?: string;\n}\n\nconst Button: React.FC<ButtonType> = ({ text, color = \"light\", link, target = \"_self\"}) => {\n    const Tag = !link ? \"button\" : \"a\";\n\n    return (\n        <Tag \n            className={`button text-base border-2 px-8 py-2 font-bold uppercase rounded-sm button-${color}`}\n            href={link}\n            target={target}\n        >\n            {text}\n        </Tag>\n    )\n}\n\nexport default Button\n","import React from \"react\";\n\nconst Newsletter: React.FC = () => {\n    \n    return (\n        <>\n            {/* Newsletter  TODO: make a component*/}\n            <h2 className={`text-center mb-8`} >Newsletter</h2>\n            <p className=\"max-w-4xl text-center mx-auto mb-4 text-xl\">Join our newsletter and unlock a free <b>6-pack of Lightroom presets</b>—designed to make your photos stand out. Plus, get insider editing tips and VIP discounts!</p>\n            <div className=\"text-center ml-embedded pb-12 lg:pb-32 min-h-[236px] lg:min-h-[316px]\" data-form=\"ndBhtT\"></div>\n        </>\n    )\n}\n\nexport default Newsletter","'use strict';\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (O, P) {\n  if (!delete O[P]) throw $TypeError('Cannot delete property ' + tryToString(P) + ' of ' + tryToString(O));\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar deletePropertyOrThrow = require('../internals/delete-property-or-throw');\nvar toString = require('../internals/to-string');\nvar fails = require('../internals/fails');\nvar internalSort = require('../internals/array-sort');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar FF = require('../internals/engine-ff-version');\nvar IE_OR_EDGE = require('../internals/engine-is-ie-or-edge');\nvar V8 = require('../internals/engine-v8-version');\nvar WEBKIT = require('../internals/engine-webkit-version');\n\nvar test = [];\nvar nativeSort = uncurryThis(test.sort);\nvar push = uncurryThis(test.push);\n\n// IE8-\nvar FAILS_ON_UNDEFINED = fails(function () {\n  test.sort(undefined);\n});\n// V8 bug\nvar FAILS_ON_NULL = fails(function () {\n  test.sort(null);\n});\n// Old WebKit\nvar STRICT_METHOD = arrayMethodIsStrict('sort');\n\nvar STABLE_SORT = !fails(function () {\n  // feature detection can be too slow, so check engines versions\n  if (V8) return V8 < 70;\n  if (FF && FF > 3) return;\n  if (IE_OR_EDGE) return true;\n  if (WEBKIT) return WEBKIT < 603;\n\n  var result = '';\n  var code, chr, value, index;\n\n  // generate an array with more 512 elements (Chakra and old V8 fails only in this case)\n  for (code = 65; code < 76; code++) {\n    chr = String.fromCharCode(code);\n\n    switch (code) {\n      case 66: case 69: case 70: case 72: value = 3; break;\n      case 68: case 71: value = 4; break;\n      default: value = 2;\n    }\n\n    for (index = 0; index < 47; index++) {\n      test.push({ k: chr + index, v: value });\n    }\n  }\n\n  test.sort(function (a, b) { return b.v - a.v; });\n\n  for (index = 0; index < test.length; index++) {\n    chr = test[index].k.charAt(0);\n    if (result.charAt(result.length - 1) !== chr) result += chr;\n  }\n\n  return result !== 'DGBEFHACIJK';\n});\n\nvar FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD || !STABLE_SORT;\n\nvar getSortCompare = function (comparefn) {\n  return function (x, y) {\n    if (y === undefined) return -1;\n    if (x === undefined) return 1;\n    if (comparefn !== undefined) return +comparefn(x, y) || 0;\n    return toString(x) > toString(y) ? 1 : -1;\n  };\n};\n\n// `Array.prototype.sort` method\n// https://tc39.es/ecma262/#sec-array.prototype.sort\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  sort: function sort(comparefn) {\n    if (comparefn !== undefined) aCallable(comparefn);\n\n    var array = toObject(this);\n\n    if (STABLE_SORT) return comparefn === undefined ? nativeSort(array) : nativeSort(array, comparefn);\n\n    var items = [];\n    var arrayLength = lengthOfArrayLike(array);\n    var itemsLength, index;\n\n    for (index = 0; index < arrayLength; index++) {\n      if (index in array) push(items, array[index]);\n    }\n\n    internalSort(items, getSortCompare(comparefn));\n\n    itemsLength = lengthOfArrayLike(items);\n    index = 0;\n\n    while (index < itemsLength) array[index] = items[index++];\n    while (index < arrayLength) deletePropertyOrThrow(array, index++);\n\n    return array;\n  }\n});\n","import React from \"react\";\n\ntype SpanTextProps = {\n    text: string;\n    delay: number;\n};\n\nconst SpanText: React.FC<SpanTextProps> = ({ text, delay = 0.05 }) => {\n    return (\n        <span className=\"animated-letter\">\n            {text.split(\" \").map((word, i) => (\n                <span className=\"word\" key={i}>\n                    {word.split(\"\").map((letter, j) => (\n                        <span className=\"letter\" \n                            key={j}\n                            style={{ animationDelay: `${j * delay}s` }}\n                        >\n                            {letter}\n                        </span>\n                    ))}\n                    <span>&nbsp;</span>\n                </span>\n            ))}\n            {/* {text.split(\"\").map((char, index) => (\n                <span \n                    key={index}\n                    style={{ animationDelay: `${index * delay}s`}}\n                >\n                    {char}\n                </span>\n            ))} */}\n        </span>\n    );\n};\n\n// Usage Example\nexport default SpanText;\n","'use strict';\nvar classof = require('../internals/classof');\n\nvar $String = String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');\n  return $String(argument);\n};\n","'use strict';\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar createProperty = require('../internals/create-property');\n\nvar $Array = Array;\nvar max = Math.max;\n\nmodule.exports = function (O, start, end) {\n  var length = lengthOfArrayLike(O);\n  var k = toAbsoluteIndex(start, length);\n  var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n  var result = $Array(max(fin - k, 0));\n  var n = 0;\n  for (; k < fin; k++, n++) createProperty(result, n, O[k]);\n  result.length = n;\n  return result;\n};\n","'use strict';\nvar UA = require('../internals/engine-user-agent');\n\nmodule.exports = /MSIE|Trident/.test(UA);\n","export default __webpack_public_path__ + \"static/monthly-subcription-cover-ba138bee2a79c6122793ba3b1873bc74.jpg\";","import React from \"react\"\nimport Columns from \"../columns\";\nimport Button from \"../../design-system/button/button\";\nimport MonthlySubscriptionImg from '../../content/images/monthly-subscription/monthly-subcription-cover.jpg';\n\nconst MonthlyCTA: React.FC = () => {\n\n  return (\n    <>\n    {/* Membership CTA */ }\n    <section className = \"container-black px-5 pt-12 lg:pt-28\" >\n      <Columns columns=\"2\" gap=\"16\">\n        <div>\n          <img className=\"object-cover rounded-2xl w-full max-h-[700px]\" height={2000} width={3000} src={MonthlySubscriptionImg} alt=\"Concon Dunes\" loading=\"eager\" />\n        </div>\n        <div className=\"text-left flex flex-col justify-center\">\n          <h2 className=\"mb-4\">Elevate your edits every month.</h2>\n          <p className=\"mb-4 text-xl\">Get fresh, professionally crafted Lightroom presets delivered monthly to keep your photo style evolving. Perfect for photographers and creators who love staying inspired.</p>\n          <div>\n            <Button\n              text=\"Subscribe now\"\n              color=\"dark\"\n              link=\"https://thedarkroomm.gumroad.com/l/monthly-lightroom-presets\"\n              target=\"_blank\"\n              onClick={() => sa_event(\"buy_monthly_subscription\")}\n            />\n          </div>\n        </div>\n      </Columns>\n      </section>\n    </>\n  );\n}\n\nexport default MonthlyCTA\n","'use strict';\nvar arraySlice = require('../internals/array-slice-simple');\n\nvar floor = Math.floor;\n\nvar mergeSort = function (array, comparefn) {\n  var length = array.length;\n  var middle = floor(length / 2);\n  return length < 8 ? insertionSort(array, comparefn) : merge(\n    array,\n    mergeSort(arraySlice(array, 0, middle), comparefn),\n    mergeSort(arraySlice(array, middle), comparefn),\n    comparefn\n  );\n};\n\nvar insertionSort = function (array, comparefn) {\n  var length = array.length;\n  var i = 1;\n  var element, j;\n\n  while (i < length) {\n    j = i;\n    element = array[i];\n    while (j && comparefn(array[j - 1], element) > 0) {\n      array[j] = array[--j];\n    }\n    if (j !== i++) array[j] = element;\n  } return array;\n};\n\nvar merge = function (array, left, right, comparefn) {\n  var llength = left.length;\n  var rlength = right.length;\n  var lindex = 0;\n  var rindex = 0;\n\n  while (lindex < llength || rindex < rlength) {\n    array[lindex + rindex] = (lindex < llength && rindex < rlength)\n      ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]\n      : lindex < llength ? left[lindex++] : right[rindex++];\n  } return array;\n};\n\nmodule.exports = mergeSort;\n"],"names":["_ref","children","gap","columns","React","className","toPropertyKey","definePropertyModule","createPropertyDescriptor","module","exports","object","key","value","propertyKey","f","webkit","match","fails","METHOD_NAME","argument","method","call","hasNativeLazyLoadSupport","HTMLImageElement","prototype","node","Boolean","images","_node$images$fallback","fallback","src","gatsbyImageData","gatsbyImage","_node$childImageSharp","childImageSharp","srcSet","width","height","layout","wrapperStyle","style","getMainProps","isLoading","isLoaded","loading","shouldLoad","_extends","opacity","getPlaceholderProps","placeholder","backgroundColor","objectFit","objectPosition","position","top","left","bottom","right","result","transition","Sizer","createElement","paddingTop","maxWidth","display","alt","role","LayoutWrapper","props","_objectWithoutPropertiesLoose","Fragment","Image","decoding","Picture","_ref2","sources","sizes","length","map","media","type","fallbackImage","propTypes","PropTypes","isRequired","displayName","Placeholder","_Picture$propTypes","propName","componentName","Error","MainImage","removeNewLines","str","replace","altValidator","rest","string","image","_excluded","Set","renderImageToStringPromise","renderImage","GatsbyImageHydrator","as","class","preactClass","onStartLoad","onLoad","onError","getWrapperProps","wStyle","wClass","wrapperProps","root","useRef","useMemo","JSON","stringify","sizer","useEffect","import","then","renderImageToString","swapPlaceholderImage","ssrImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","onLoadListener","imageCache","add","cacheKey","has","animationFrame","cleanupCallback","innerHTML","requestAnimationFrame","cancelAnimationFrame","useLayoutEffect","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","GatsbyImage","memo","_getStaticImage","StaticImage","__imageData","imageData","__error","console","warn","imgClassName","imgStyle","placeholderBackgroundColor","cleanedImages","source","checkDimensionProps","number","validLayouts","GatsbyImageBrowser","UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","x","trim","filter","join","toLowerCase","locale","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","lastIndex","m1","charAt","_","identifier","m","postProcess","Head","location","params","data","pageContext","Script","id","strategy","TO_STRING_TAG_SUPPORT","isCallable","classofRaw","TO_STRING_TAG","wellKnownSymbol","$Object","Object","CORRECT_ARGUMENTS","arguments","it","O","tag","undefined","error","tryGet","callee","String","Date","getFullYear","fillColor","viewBox","fill","xmlns","rx","cx","cy","r","stroke","strokeWidth","d","show","setShow","lastScrollY","setLastScrollY","handleScroll","currentScrollY","window","scrollY","href","onClick","sa_event","Logo","target","Nav","Footer","async","firefox","text","color","link","Tag","tryToString","$TypeError","P","$","uncurryThis","aCallable","toObject","lengthOfArrayLike","deletePropertyOrThrow","toString","internalSort","arrayMethodIsStrict","FF","IE_OR_EDGE","V8","WEBKIT","nativeSort","sort","push","FAILS_ON_UNDEFINED","FAILS_ON_NULL","STRICT_METHOD","STABLE_SORT","code","chr","index","fromCharCode","k","v","a","b","proto","forced","comparefn","array","this","itemsLength","items","arrayLength","y","getSortCompare","delay","split","word","letter","j","animationDelay","classof","$String","toAbsoluteIndex","createProperty","$Array","max","Math","start","end","fin","n","UA","Columns","MonthlySubscriptionImg","Button","arraySlice","floor","mergeSort","middle","insertionSort","merge","element","llength","rlength","lindex","rindex"],"sourceRoot":""}