{"version":3,"file":"component---src-pages-preset-giveaway-tsx-80a8daaafad4fd0c3143.js","mappings":"kJAuDA,IArCkCA,IAA6C,IAA5C,MAAEC,EAAK,YAAEC,EAAW,MAAEC,EAAK,QAAEC,GAAS,EACnEC,EAAaD,GAAUE,EAAAA,EAAAA,GAASF,EAAQG,OAAOC,UAAUC,gBAAgBC,iBAAmB,KAEhG,OACEC,EAAAA,cAAAA,MAAAA,CAAKC,UAAY,iFACfD,EAAAA,cAAAA,KAAAA,CAAIC,UAAY,mBAAmBV,GAAiBE,EAAU,eAAiB,kBAC7EO,EAAAA,cAACE,EAAAA,EAAQ,CACPC,KAAMb,EACNc,MAAO,SAIRX,GAAWO,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,yCAC3BD,EAAAA,cAAAA,IAAAA,CACEK,KAAO,YAAWZ,EAAQa,OAC1BL,UAAU,qFACVM,QAAS,IAAMC,SAAS,0BAExBR,EAAAA,cAACS,EAAAA,EAAW,CACVR,UAAU,4CACVT,MAAOE,EACPgB,IAAM,GAAEjB,EAAQkB,aAAalB,EAAQmB,cAGzCZ,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,OAAM,cAAYR,EAAQkB,UAAU,IAAElB,EAAQmB,aAG3DrB,GAAeS,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,+CAA+CV,KAC3EC,GAASQ,EAAAA,cAACS,EAAAA,EAAW,CACtBR,UAAU,mDACVT,MAAOA,EACPkB,IAAKpB,K,qCCbb,IA7B0CD,IAA6B,IAA5B,KAAEc,EAAI,MAAEC,EAAQ,KAAM,EAC7D,OACIJ,EAAAA,cAAAA,OAAAA,CAAMC,UAAU,mBACXE,EAAKU,MAAM,KAAKC,KAAI,CAACC,EAAMC,IACxBhB,EAAAA,cAAAA,OAAAA,CAAMC,UAAU,OAAOgB,IAAKD,GACvBD,EAAKF,MAAM,IAAIC,KAAI,CAACI,EAAQC,IACzBnB,EAAAA,cAAAA,OAAAA,CAAMC,UAAU,SACZgB,IAAKE,EACLC,MAAO,CAAEC,eAAmBF,EAAIf,EAAN,MAEzBc,KAGTlB,EAAAA,cAAAA,OAAAA,KAAM,S,kIC2B1B,UAtCuCX,IAAc,IAAb,KAAEiC,GAAM,EAC9C,MAAQC,mBAAmB,MAACC,IAAWF,EAEvC,OACEtB,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACyB,EAAAA,EAAM,KACLzB,EAAAA,cAAC0B,EAAAA,EAAI,CACHpC,MAAM,mCAERU,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,+DACbD,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,gBAAe,6BAC7BD,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,kCAAiC,uFAE9CD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,6BACbD,EAAAA,cAAC2B,EAAAA,EAAM,CACLxB,KAAK,UACLyB,MAAM,OACNC,KAAK,8BACLtB,QAAS,IAAMC,SAAS,gCACxBsB,UAAU,IAEZ9B,EAAAA,cAAC2B,EAAAA,EAAM,CACLxB,KAAK,SACLyB,MAAM,OACNC,KAAK,6BACLtB,QAAS,IAAMC,SAAS,+BACxBsB,UAAU,MAKhB9B,EAAAA,cAAC+B,EAAAA,EAAU,Q","sources":["webpack://thedarkroomm/./src/components/hero-product/hero.tsx","webpack://thedarkroomm/./src/utils/span-text.tsx","webpack://thedarkroomm/./src/pages/preset-giveaway.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport SpanText from \"../../utils/span-text\";\n\n/*\n * Types\n */\ninterface HeroProps {\n  title: string;\n  description?: string;\n  image?: any;\n  creator?: any;\n}\n\n/*\n * Style\n */\n\nconst Hero: React.FC<HeroProps> = ({ title, description, image, creator }) => {\n  let creatorImg = creator ? getImage(creator.Avatar.localFile.childImageSharp.gatsbyImageData) : null;\n\n  return (\n    <div className={`hero container relative flex items-center justify-center flex-col text-center`}>\n      <h1 className={`mt-8 max-w-5xl ${!!description || !!creator ? 'mb-2 lg:mb-4' : 'mb-8 lg:mb-16'}`}>\n        <SpanText\n          text={title}\n          delay={.04}\n        />\n      </h1>\n\n      {!!creator && <div className=\"mb-8 lg:mb-16 flex items-center gap-4\">\n        <a \n          href={`/creator/${creator.Slug}`} \n          className=\"w-max outline-4 hover:outline duration-300 rounded-full overflow-hidden box-border\"\n          onClick={() => sa_event(\"click_creator_profile\")}\n        >\n          <GatsbyImage\n            className=\"hover:scale-110 duration-300 rounded-full\"\n            image={creatorImg}\n            alt={`${creator.FirstName} ${creator.LastName}`}\n          />\n        </a>\n        <h4 className=\"m-0\">created by {creator.FirstName} {creator.LastName}</h4>\n      </div>}\n      \n      {!!description && <p className=\"max-w-4xl text-center mx-auto mb-12 text-xl\">{description}</p>}\n      {!!image && <GatsbyImage \n        className=\"rounded-t-2xl w-full max-h-[700px] min-h-[300px]\"\n        image={image} \n        alt={title}\n      />}\n    </div>\n  );\n}\n\nexport default Hero\n","import React from \"react\";\n\ntype SpanTextProps = {\n    text: string;\n    delay: number;\n};\n\nconst SpanText: React.FC<SpanTextProps> = ({ text, delay = 0.05 }) => {\n    return (\n        <span className=\"animated-letter\">\n            {text.split(\" \").map((word, i) => (\n                <span className=\"word\" key={i}>\n                    {word.split(\"\").map((letter, j) => (\n                        <span className=\"letter\" \n                            key={j}\n                            style={{ animationDelay: `${j * delay}s` }}\n                        >\n                            {letter}\n                        </span>\n                    ))}\n                    <span>&nbsp;</span>\n                </span>\n            ))}\n            {/* {text.split(\"\").map((char, index) => (\n                <span \n                    key={index}\n                    style={{ animationDelay: `${index * delay}s`}}\n                >\n                    {char}\n                </span>\n            ))} */}\n        </span>\n    );\n};\n\n// Usage Example\nexport default SpanText;\n","import * as React from \"react\"\nimport type { PageProps } from \"gatsby\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout/layout\";\nimport Hero from \"../components/hero-product/hero\";\nimport Button from \"../design-system/button/button\";\nimport MonthlyCTA from \"../components/monthly-cta/monthly-cta\";\n\nconst IndexPage: React.FC<PageProps> = ({ data }) => {\n  const { allMarkdownRemark: {edges} } = data \n\n  return (\n    <>\n      <Layout>\n        <Hero\n          title='Try one of our signature looks'\n        />\n        <div className=\"container-white py-5 pt-12 lg:py-24 rounded-2xl text-center\">\n          <h2 className=\"mb-4 mx-auto\">Download your free preset</h2>\n          <p className=\"max-w-4xl mx-auto mb-4 text-xl\">To celebrate the launch of our new Collection, we're giving away one of its presets</p>\n\n          <div className=\"flex justify-center gap-4\">\n            <Button\n              text=\"Desktop\"\n              color=\"dark\"\n              link=\"/free-preset/ny-desktop.xmp\"\n              onClick={() => sa_event(\"download_free_preset_desktop\")}\n              download={true}\n            />\n            <Button\n              text=\"Mobile\"\n              color=\"dark\"\n              link=\"/free-preset/ny-mobile.dng\"\n              onClick={() => sa_event(\"download_free_preset_mobile\")}\n              download={true}\n            />\n          </div>\n        </div>\n\n        <MonthlyCTA />\n        \n      </Layout>\n    </>\n  )\n}\n\nexport default IndexPage\n\nexport { Head } from \"../seo/head\"\n\nexport const pageQuery = graphql`\n  query Products {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/products/\" } }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            published\n            slug\n            title\n            productLink\n            featuredImage {\n              childImageSharp {\n                gatsbyImageData(width: 600)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;"],"names":["_ref","title","description","image","creator","creatorImg","getImage","Avatar","localFile","childImageSharp","gatsbyImageData","React","className","SpanText","text","delay","href","Slug","onClick","sa_event","GatsbyImage","alt","FirstName","LastName","split","map","word","i","key","letter","j","style","animationDelay","data","allMarkdownRemark","edges","Layout","Hero","Button","color","link","download","MonthlyCTA"],"sourceRoot":""}